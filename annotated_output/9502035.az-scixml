AIM	This paper describes the author 's implementation of a parser aimed at reproducing , in a computationally explicit system , the constraints of a particular psycholinguistic model.	A-0
CTR	In's model , `` unconscious '' garden paths may be processed via the addition of structural relations to a monotone increasing set at the point of disambiguation , but there is no discussion as to how the parser decides which relations to add .	A-1
OWN	We model this decision as a search for a node in the tree at which an explicitly defined parsing operation , tree-lowering may be applied .	A-2
OWN	With reference to English and Japanese processing data , we show the importance of this search for empirical adequacy of the psycholinguistic model .	A-3
OTH	Certain researchers in the psycholinguistic community,, have argued for a binary distinction between two distinct types of garden path sentences .	S-0
OTH	Conscious garden paths , such asbelow , are locally ambiguous sentences which give rise to reanalysis that is both experimentally detectable and causes a conscious sensation of difficulty or `` surprise effect '' .	S-1
OTH	Unconscious garden paths , on the other hand , such as, cause reanalysis which is experimentally detectable , but which is generally not `` noticed '' by the speaker or hearer .	S-2
OTH	This binary distinction has often been used to motivate a two-level architecture in the human syntactic processing system , where what we will call the `` core parser '' performs standard attachment , as well as being able to reanalyse in the easy cases ( such as on reaching hurts in) , but where the assistance of a higher level resolver ( to use's terminology,) , is required to solve the difficult cases , ( such as on reaching melted in) .	S-3
OTH	This `` core parser '' has been the subject of a number of computational implementations , including's deterministic parser , Description theory ( henceforth , D-theory ), and's licensing based model,.	S-4
OTH	It has also been the subject of a number of psycholinguistic studies on a more theoretical level,.	S-5
BAS	The implementation described in this paper is based on the most recent model , that of.	S-6
OTH	This model is interesting in that it does not allow the parser to employ delay tactics , such as using a lookahead buffer,, or waiting for the head of a phrase to appear in the input before constructing that phrase,,.	S-7
OTH	Instead , processing is guided by the principle of Incremental Licensing , which states that `` the parser attempts incrementally to satisfy the principles of grammar '' .	S-8
OTH	For the purposes of this implementation , I have interpreted this to mean that each word must be attached into a fully-connected phrase marker as it is found in the input .	S-9
OTH	The psychological desirability of such a Full Attachment model has been argued for , especially with regard to the processing of head-final languages , where evidence has been found of pre-head structuring,.	S-10
OTH	Such models have also been explored computationally,.	S-11
OTH	employs the D-theoretic device of building up a set of dominance and precedence relations between nodes , where the set is intended to be constrained by informational monotonicity , in that once asserted to the set , no relation may be deleted or overridden .	S-12
OTH	restricts this constraint to Primary structural relations ( i.e. dominance and precedence ) , while secondary relations ( e.g. thematic and case dependencies ) are not so constrained .	S-13
OTH	Recall, repeated below :	S-14
OTH	At the point where John knows the truth has been processed , a complete clause will have been built :	S-15
OTH	The description will include the information that the verb knows precedes NP, and that the VP dominates NP.	S-16
OTH	However , on the subsequent input of hurts , the structure can be reanalysed by asserting an extra clausal node ( call it S) dominating NP( which will then become the embedded subject ) , but which is in turn dominated by the matrix VP .	S-17
OTH	This can be achieved by adding the following structural relations to the tree description	S-18
OTH	Since the description before the processing of the disambiguating word hurts is a subset of the final tree description , the monotonicity requirement is satisfied .	S-19
OTH	Note in particular , that , because dominance is a transitive relation , and because of the inheritance condition on trees ( a node inherits the precedence relations of its ancestors ) , the two statements dom ( VP , NP) and prec ( V , NP) remain true after reanalysis .	S-20
OTH	Note also that the model will correctly fail to reanalyse for sentenceabove , since the reanalysis will require the retraction of the domination relation between the VP of the adverbial clause and the NP the ice cream .	S-21
CTR	Althoughproposes a general principle to guide initial attachment decisions ( Simplicity : No vacuous structure building ) , and specifies the conditions under which `` unconscious reanalysis '' may occur , the model leaves unspecified the problem of how the system may be implemented .	S-22
OWN	Of particular interest is the problem of how the parser decides which relations to add to the set at each point in time , especially at disambiguating points .	S-23
BAS	The basic framework on which the implementation is built is similar to Tree Adjoining Grammar.	S-24
OWN	Each lexical category is associated with a set of structural relations , which determine its lexical subtree .	S-25
OWN	We call this set the subtree projection of that lexical category .	S-26
OWN	For example , the subtree projection for verbs in the English grammar is as follows , where Lex is a variable which will be instantiated to the actual verb found in the input .	S-27
OWN	Lexical categories are also associated with lists of left and right attachment sites .	S-28
OWN	In the above case , NP , ( which will correspond to the subject of the verb ) , will be unified with the left attachment site .	S-29
OWN	If a transitive verb is found in the input , then the parser consults the verb 's argument structure and creates a new right attachment site for an NP , asserting also that this new NP is dominated by VP and preceded by V .	S-30
OWN	Simple attachment can be performed in two ways , which are defined below , where the term current tree description is intended to denote the the set of structural relations built up to that point in processing :	S-31
OWN	Intuitively , left attachment may be thought of in terms of attaching the current tree description to the left corner of the projection of the new word , while right attachment corresponds to attaching the projection of the new word to the right corner of the current tree description .	S-32
OWN	They are equivalent to's Attach-L and Attach respectively .	S-33
OWN	DEFINITION Left Attachment :	S-34
OWN	Let D be the current tree description , with root node R .	S-35
OWN	Let S be the subtree projection of the new word , whose left-most attachment site , A is of identical syntactic category as R .	S-36
OWN	The updated tree description is, where A is unified with R .	S-37
OWN	DEFINITION Right Attachment :	S-38
OWN	Let D be the current tree description , with the first right attachment site A .	S-39
OWN	Let S be the subtree projection of the new word , whose root R is of identical syntactic category as A .	S-40
OWN	The updated tree description is, where A is unified with R .	S-41
OWN	It should be clear that , while simple left and right attachment will suffice for attaching arguments without reanalysis , it will not allow us to derive the reanalysis required in example.	S-42
OWN	For this , we intuitively require some means of inserting one tree description inside another .	S-43
OWN	Schematically , what we require is illustrated below , where [1] is intended to represent the current tree description built up after John knows the truth has been parsed , and [2] is intended to represent the subtree description of the new word hurts .	S-44
OWN	We will call this operation `` tree-lowering '' .	S-45
OWN	Intuitively , the operation finds a node on the current tree description which matches the left attachment site of the projection of the new word , and attaches it , while inserting the root of the new projection in its place .	S-46
OWN	The result is that the node chosen is `` lowered '' or `` subordinated '' .	S-47
OWN	In order to maintain structural coherence , the new word attached via tree-lowering must be preceded by all other words previously attached into the description .	S-48
OWN	We can guarantee this by requiring the lowered node to dominate the last word to be attached .	S-49
OWN	We also need to ensure that , to avoid crossing branches , the lowered node does not dominate any unsaturated attachment sites ( or `` dangling nodes '' ) We therefore define accessibility for tree-lowering as follows :	S-50
OWN	DEFINITION Accessibility :	S-51
OWN	Let N be a node in the current tree description .	S-52
OWN	Let W be the last word to be attached into the tree .	S-53
OWN	N is accessible iff N dominates W , and N does not dominate any unsaturated attachment sites .	S-54
OWN	DEFINITION Tree-lowering :	S-55
OWN	Let D be the current tree description .	S-56
OWN	Let S be the subtree projection of the new word .	S-57
OWN	The left attachment site A of S must match a node N accessible in D .	S-58
OWN	The root node R of S must be licensed by the grammar in the position occupied by N .	S-59
OWN	Let L be the set of local relations in which N participates .	S-60
OWN	Let M be the result of substituting all instances of N in L with R .	S-61
OWN	The attachment node A is unified with N .	S-62
OWN	The updated tree-description is.	S-63
OWN	It will be noticed that tree-lowering is similar in spirit to the adjunction operation of Tree Adjoining Grammars.	S-64
OWN	The difference is that the foot and root nodes of an auxiliary tree in TAG , ( corresponding to the `` lowered '' node and the node that replaces it respectively ) must be of the same syntactic category , whereas , as we have seen in this example , in the model proposed here , the two nodes may be of different categories , so long as the resulting structure is licensed by the grammar .	S-65
OWN	In the case of example, at the point where the truth has been processed , the parser must find an accessible node which matches the category of the left attachment site of hurts ( i.e. an NP ) .	S-66
OWN	The only choice is NP:	S-67
OWN	Now , all the local relations in which NPparticipates are found :	S-68
OWN	and NPis substituted with the root of the new projection , Sto derive two new relations :	S-69
OWN	These relations are found to be licensed , because the verb which V dominates ( `` knows '' ) may subcategorise for a clause , so these new relations are added to the set .	S-70
OWN	Now , adding the subtree projection of hurts to the set , and unifying its left attachment site with NPresults in the derived structure with NP`` subordinated '' into the lower clause .	S-71
OWN	With the tree-lowering operation so defined , the problem of finding which relations to add to the set at a disambiguating point reduces to a search for an accessible node at which to apply this operation .	S-72
OWN	However , this implies that , if more than one such node exists , the parser must be given a preference for making the requisite decision .	S-73
OWN	Consider the following sentence fragment , for example :	S-74
OWN	If the input subsequently continues with a verb , then we have a choice of two nodes for lowering , i.e. NPand NP.	S-75
OWN	Though no experimental work has been done on this type of sentence , there seems to be an intuitive preference for the lower attachment site , NP.	S-76
OWN	In, binding constraints force lowering to be applied at NP, while in, it must be applied at NP.	S-77
OWN	Of the two , most native English speakers reportto be easier .	S-78
OWN	Note also , that , on standard X-bar assumptions , the attachment of post-modifiers may be derived via lowering at an X ' node .	S-79
OWN	In this case , the lowered node and its replacement will be of the same syntactic category ( like the root and foot node of a TAG auxiliary tree ) .	S-80
OWN	Researchers have noted a general preference for low attachment of post-modifiers ( this is accounted for by the principle of late closure) .	S-81
OWN	This would suggest that a reasonable search strategy for English would be to search the set of accessible node in a bottom-up direction for English .	S-82
OWN	The algorithm is constructed in such a way that lowering is only attempted in cases where simple attachment fails .	S-83
OWN	This means that arguments ( which are incorporated via simple attachment ) will be attached preferentially to adjuncts ( which are incorporated via lowering ) .	S-84
OWN	This captures the general preference for argument over adjunct attachment , which is accounted for by the principle of Minimal attachment in, and by the principle of simplicity in.	S-85
BKG	Japanese presents a challenge for any incremental parsing model because , typically , it is not possible to determine where an embedded clause begins .	S-86
BKG	Consider the following example :	S-87
BKG	Up to the first verb kaita ( `` wrote '' ) , the string is interpretable as a full clause ( without a gap ) , meaning `` John wrote an essay '' , and the incremental parser builds the requisite structure .	S-88
BKG	However , the appearance of the head noun seito ( student ) means that at least part of the preceding clause must be reinterpreted as a relative clause including a gap ( note that there is no overt relative pronoun in Japanese ) .	S-89
OTH	One way of looking at what is happening here is to see the subject NP John ga as being dissociated from the clause in which it is originally attached , and reattached into the main clause .	S-90
OTH	But looking at it from a different perspective , ashas noted , one can see the subject NP as remaining in the main clause , and the constituent bracketed in, ( ronbun wo kaita ( `` wrote an essay '' ) ) as being lowered into the relative clause .	S-91
OTH	If this is possible , then we would expect examples liketo be unconscious garden paths , and this does indeed seem to be reflected in the intuitive data.	S-92
OWN	However , if we are to allow our parser to handle such examples , we must expand the definition of tree-lowering , since , in order to build a relative clause , we have to assert extra material ( including the empty subject and the new S node ) , which is not justified solely by the lexical requirements of the disambiguating word , the head noun seito .	S-93
OWN	This involves reconstructing all the clausal structure dominating the lowering site ( including asserting empty argument positions ) , with reference to the verb 's case frame , and attempting to attach the result as a relative clause to the head noun .	S-94
OTH	describes a `` minimal expulsion strategy '' , which predicts a preference , on reanalysis , towards expelling the minimum amount of material from the clause .	S-95
OWN	In our terms , this means that ( assuming a binary right-branching clause structure , with the verb in its right corner ) the node selected for lowering must be as high as possible .	S-96
OWN	This means that the bottom-up search which we use for English will wrongly predict a Maximal expulsion strategy .	S-97
OWN	In cases such as, assuming the bottom-up search , when a post-clausal noun has been reached in the input , the parser starts its search from the node immediately dominating the last word to be incorporated , ( i.e. the verb of what will become the relative clause ) .	S-98
OWN	This means that , in cases such as, the first preference will be to lower the verb ( and therefore `` expel '' both subject and object ) , whereas the human preference , ( to lower the object and verb , and therefore expel only the subject ) is the parser 's second choice on the bottom-up search strategy .	S-99
OTH	note that examples where both subject and object must be expelled from the relative clause , as would be the first choice in a bottom-up search , often cause a conscious garden path effect .	S-100
OTH	An example , adapted fromis the following :	S-101
OWN	In order to capture the minimal expulsion strategy in this class of Japanese examples , therefore , search for the lowering node should be conducted top-down .	S-102
OWN	We are currently investigating the consequences of changing the search strategy in this way .	S-103
OWN	Having formulated the constraints of's model in terms of the accessibility of a node for tree-lowering , we can see that the model can be falsified if we can find a case where the relevant disambiguating information comes at a point in processing where the node which is required to be lowered is no longer accessible .	S-104
OWN	Consider the following pair of sentences :	S-105
OWN	It is familiar from the psycholinguistic literature that there is a preference for attaching the with phrase as an instrumental argument of the verb ( as in) , on the reading where the telescope is the instrument of seeing ) .	S-106
OWN	On the assumption that saw selects for a PP instrumental argument , we can derive this preference in the present model via the preference to attach as an argument as opposed to an adjunct .	S-107
OWN	However , since we are constrained by incrementality , we will have to make an attachment decision for the PP as soon as the preposition with is encountered , and it will be attached in the preferred reading as a sister of the verb .	S-108
OWN	This means that , in cases such as, where , on the globally acceptable reading , the PP is an adjunct of the NP the man , this attachment will have to be revised , and the PP retrospectively adjoined into the relevant N ' node .	S-109
OWN	However , once the preposition with has been attached , the required N ' node will no longer be accessible , and a conscious garden path effect will be predicted , which , intuitively , does not occur .	S-110
OWN	Note that there is no garden path effect even if the preposition is separated from the disambiguating head noun by a series of adjectives : ( `` I saw the man with the neat , quaint , old-fashioned moustache / telescope '' ) .	S-111
OWN	The same result obtains if we abstract away from the particular implementational details of tree-lowering , and return to the abstract level at whichstates his model .	S-112
OWN	Once the PP has been attached as an argument of the verb , it can never be reanalysed as the adjunct of the preceding NP , because the NP will precede the PP before reanalysis , and dominate it after reanalysis , which is against the `` exclusivity condition '' on trees ( i.e. no two nodes may stand in both a dominance and a precedence relation ) .	S-113
OWN	A similar problem concerns examples such as the following , from.	S-114
OWN	in the above ,have manipulated number agreement to force low, middleand highattachment of the bracketed relative clause .	S-115
OWN	The results of their on - and off-line experiments show clearly that the low attachment ( corresponding to) is easiest , but the middle attachment ( corresponding to) is most difficult .	S-116
OWN	This behaviour cannot be captured whether we adopt a bottom-up or a top-down search for tree-lowering .	S-117
OWN	However , even if we can incorporate the required preferences into the parser , the constraint of incrementality will force us to make the decision on encountering that .	S-118
OWN	This means that , assuming we decide initially to attach low , but number agreement on was subsequently forces high attachment , as in, then a conscious garden path effect will be predicted , as lowering cannot derive the reanalysis .	S-119
OWN	This is true on the abstract level as well , since there will be nodes in the description which precede the original low position of the relative clause , but are dominated by the subsequent high position of the relative clause .	S-120
OWN	However , intuitively , of the above sentences , it is onlywhich causes the conscious garden path effect .	S-121
CTR	The current implementation shows that the success of an abstract model such as's depends crucially on the computational details of the processing algorithm used .	S-122
OWN	The search for the lowering site is of particular importance .	S-123
OWN	In the final section we have seen that the combination of informational monotonicity with the assumption of strict incrementality results in a system which is too constrained to capture all the processing data .	S-124
OWN	Future research will be aimed at determining , firstly , how we can enrich the information to which the search strategy is sensitive in order to provide a better match with human preferences , and secondly , which constraints should be relaxed in order to avoid the problem of undergeneration .	S-125
