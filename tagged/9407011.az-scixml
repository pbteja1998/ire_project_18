<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE PAPER SYSTEM "paper-structure.dtd">
<PAPER>
<METADATA>
<FILENO>9407011</FILENO>
<APPEARED><CONFERENCE>ACL</CONFERENCE><YEAR>1994</YEAR></APPEARED>
<CLASSIFICATION> Lg.Pr.Dc </CLASSIFICATION>
</METADATA>
<TITLE> Discourse Obligations in Dialogue Processing </TITLE>
<AUTHORLIST>
<AUTHOR>David A. Traum</AUTHOR>
<AUTHOR>James F. Allen</AUTHOR>
</AUTHORLIST>
<ABSTRACT>
<A-S ID='A-0' DOCUMENTC='S-217' AZ='OWN'> We show that in modeling social interaction , particularly dialogue , the attitude of obligation can be a useful adjunct to the popularly considered attitudes of belief , goal , and intention and their mutual and shared counterparts . </A-S>
<A-S ID='A-1' AZ='AIM'> In particular , we show how discourse obligations can be used to account in a natural manner for the connection between a question and its answer in dialogue and how obligations can be used along with other parts of the discourse context to extend the coverage of a dialogue system . </A-S>
</ABSTRACT>
<BODY>
<DIV DEPTH='1'>
<HEADER ID='H-0'> Motivation </HEADER>
<P>
<S ID='S-0' AZ='OTH'> Most computational models of discourse are based primarily on an analysis of the intentions of the speakers  <REF TYPE='P'>Cohen and Perrault 1979</REF> , <REF SELF="YES" TYPE='P'>Allen and Perrault 1980</REF> , <REF TYPE='P'>Grosz and Sidner 1986</REF> . </S>
<S ID='S-1' AZ='OTH'> An agent has certain goals , and communication results from a planning process to achieve these goals . </S>
<S ID='S-2' AZ='OTH'> The speaker will form intentions based on the goals and then act on these intentions , producing utterances . </S>
<S ID='S-3' AZ='OTH'> The hearer will then reconstruct a model of the speaker 's intentions upon hearing the utterance . </S>
<S ID='S-4' AZ='CTR'> This approach has many strong points , but does not provide a very satisfactory account of the adherence to discourse conventions in dialogue . </S>
</P>
<P>
<S ID='S-5' AZ='BKG'> For instance , consider one simple phenomena : a question is typically followed by an answer , or some explicit statement of an inability or refusal to answer . </S>
<S ID='S-6' AZ='BKG'> The intentional story account of this goes as follows . </S>
<S ID='S-7' AZ='BKG'> From the production of a question by Agent B , Agent A recognizes Agent B 's goal to find out the answer , and she adopts a goal to tell B the answer in order to be co-operative . </S>
<S ID='S-8' AZ='BKG'> A then plans to achieve the goal , thereby generating the answer . </S>
<S ID='S-9' AZ='BKG'> This provides an elegant account in the simple case , but requires a strong assumption of co-operativeness . </S>
<S ID='S-10' AZ='BKG'> Agent A must adopt agent B 's goals as her own . </S>
<S ID='S-11' AZ='BKG'> As a result , it does not explain why A says anything when she does not know the answer or when she is not predisposed to adopting B 's goals . </S>
</P>
<P>
<S ID='S-12' AZ='OTH'> Several approaches have been suggested to account for this behavior . </S>
<S ID='S-13' AZ='OTH'> <REF TYPE='A' SELF="YES">Litman and Allen 1987</REF> introduced an intentional analysis at the discourse level in addition to the domain level , and assumed a set of conventional multi-agent actions at the discourse level . </S>
<S ID='S-14' AZ='OTH'> Others have tried to account for this kind of behavior using social intentional constructs such as Joint intentions <REF TYPE='P'>Cohen and Levesque 1991</REF> or Shared Plans <REF TYPE='P'>Grosz and Sidner 1990</REF> . </S>
<S ID='S-15' AZ='CTR'> While these accounts do help explain some discourse phenomena more satisfactorily , they still require a strong degree of co-operativity to account for dialogue coherence , and do not provide easy explanations of why an agent might act in cases that do not support high-level mutual goals . </S>
</P>
<P>
<S ID='S-16' AZ='BKG'> Consider a stranger approaching an agent and asking , `` Do you have the time ? '' It is unlikely that there is a joint intention or shared plan , as they have never met before . </S>
<S ID='S-17' AZ='BKG'> From a purely strategic point of view , the agent may have no interest in whether the stranger 's goals are met . </S>
<S ID='S-18' AZ='BKG'> Yet , typically agents will still respond in such situations . </S>
</P>
<P>
<S ID='S-19' AZ='BKG'> As another example , consider a case in which the agent 's goals are such that it prefers that an interrogating agent not find out the requested information . </S>
<S ID='S-20' AZ='BKG'> This might block the formation of an intention to inform , but what is it that inspires the agent to respond at all . </S>
</P>
<P>
<S ID='S-21' AZ='OWN'> As these examples illustrate , an account of question answering must go beyond recognition of speaker intentions . </S>
<S ID='S-22' AZ='OWN'> Questions do more than just provide evidence of a speaker 's goals , and something more than adoption of the goals of an interlocutor is involved in formulating a response to a question . </S>
</P>
<P>
<S ID='S-23' AZ='OTH'> Some researchers , e.g. , <REF TYPE='A'>Mann 1988</REF> , <REF TYPE='A'>Kowtko et al. 1991</REF> , assume a library of discourse level actions , sometimes called dialogue games , which encode common communicative interactions . </S>
<S ID='S-24' AZ='OTH'> To be co-operative , an agent must always be participating in one of these games . </S>
<S ID='S-25' AZ='OTH'> So if a question is asked , only a fixed number of activities , namely those introduced by a question , are co-operative responses . </S>
<S ID='S-26' AZ='CTR'> Games provide a better explanation of coherence , but still require the agents to recognize each other 's intentions to perform the dialogue game . </S>
<S ID='S-27' AZ='OTH'> As a result , this work can be viewed as a special case of the intentional view . </S>
<S ID='S-28' AZ='OTH'> An interesting model is described by <REF TYPE='A'>Airenti et al. 1993</REF> , which separates out the conversational games from the task-related games in a way similar way to <REF SELF="YES" TYPE='P'>Litman and Allen 1987</REF> . </S>
<S ID='S-29' AZ='CTR'> Because of this separation , they do not have to assume co-operation on the tasks each agent is performing , but still require recognition of intention and co-operation at the conversational level . </S>
<S ID='S-30' AZ='CTR'> It is left unexplained what goals motivate conversational co-operation . </S>
</P>
<P>
<S ID='S-31' AZ='CTR'> The problem with systems which impose co-operativity in the form of automatic goal adoption is that this makes it impossible to reason about cases in which one might want to violate these rules , especially in cases where the conversational co-operation might conflict with the agent 's personal goals . </S>
</P>
<P>
<S ID='S-32' AZ='CTR'> We are developing an alternate approach that takes a step back from the strong plan-based approach . </S>
<S ID='S-33' AZ='OTH'> By the strong plan-based account , we mean models where there is a set of personal goals which directly motivates all the behavior of the agent . </S>
<S ID='S-34' AZ='CTR'> While many of the intuitions underlying these approaches seems close to right , we claim it is a mistake to attempt to analyze this behavior as arising entirely from the agent 's high-level goals . </S>
</P>
<P>
<S ID='S-35' AZ='OWN'> We believe that people have a much more complex set of motivations for action . </S>
<S ID='S-36' AZ='OWN'> In particular , much of one 's behavior arises from a sense of obligation to behave within limits set by the society that the agent is part of . </S>
<S ID='S-37' AZ='OWN'> A model based on obligations differs from an intention-based approach in that obligations are independent of shared plans and intention recognition . </S>
<S ID='S-38' AZ='OWN'> Rather , obligations are the result of rules by which an agent lives . </S>
<S ID='S-39' AZ='OWN'> Social interactions are enabled by their being a sufficient compatibility between the rules affecting the interacting agents . </S>
<S ID='S-40' AZ='OWN'> One responds to a question because this is a social behavior that is strongly encouraged as one grows up , and becomes instilled in the agent . </S>
</P>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-1'> Sketch of Solution </HEADER>
<P>
<S ID='S-41' AZ='OWN'> The model we propose is that an agent 's behavior is determined by a number of factors , including that agent 's current goals in the domain , and a set of obligations that are induced by a set of social conventions . </S>
<S ID='S-42' AZ='OWN'> When planning , an agent considers both its goals and obligations in order to determine an action that addresses both to the extent possible . </S>
<S ID='S-43' AZ='OWN'> When prior intentions and obligations conflict , an agent generally will delay pursuit of its intentions in order to satisfy the obligations , although the agent may behave otherwise at the cost of violating its obligations . </S>
<S ID='S-44' AZ='OWN'> At any given time , an agent may have many obligations and many different goals , and planning involves a complex tradeoff between these different factors . </S>
</P>
<P>
<S ID='S-45' AZ='OWN'> Returning to the example about questions , when an agent is asked a question , this creates an obligation to respond . </S>
<S ID='S-46' AZ='OWN'> The agent does not have to adopt the goal of answering the question as one of her personal goals in order to explain the behavior . </S>
<S ID='S-47' AZ='OWN'> Rather it is a constraint on the actions that the agent may plan to do . </S>
<S ID='S-48' AZ='OWN'> In fact , the agent might have an explicit goal not to answer the question , yet still is obliged to offer a response ( e.g. , consider most politicians at press conferences ) . </S>
<S ID='S-49' AZ='OWN'> The planning task then is to satisfy the obligation of responding to the question , without revealing the answer if at all possible . </S>
<S ID='S-50' AZ='OWN'> In cases where the agent does not know the answer , the obligation to respond may be discharged by some explicit statement of her inability to give the answer . </S>
</P>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-2'> Obligations and Discourse Obligations </HEADER>
<P>
<S ID='S-51' AZ='OWN'> Obligations represent what an agent should do , according to some set of norms . </S>
<S ID='S-52' AZ='OWN'> The notion of obligation has been studied for many centuries , and its formal aspects are examined using Deontic Logic . </S>
<S ID='S-53' AZ='OWN'> Our needs are fairly simple , and do not require an extensive survey of the complexities that arise in that literature . </S>
<S ID='S-54' AZ='OWN'> Still , the intuitions underlying that work will help to clarify what an obligation is . </S>
<S ID='S-55' AZ='OWN'> Generally , obligation is defined in terms of a modal operator often called permissible . </S>
<S ID='S-56' AZ='OWN'> An action is obligatory if it is not permissible not to do it . </S>
<S ID='S-57' AZ='OWN'> An action is forbidden if it is not permissible . </S>
<S ID='S-58' AZ='OWN'> An informal semantics of the operator can be given by positing a set of rules of behavior R .</S>
<S ID='S-59' AZ='OWN'>  An action is obligatory if its occurrence logically follows from R , and forbidden if its non-occurrence logically follows from R . </S>
<S ID='S-60' AZ='OWN'> An action that might occur or not-occur according to R is neither obligatory nor forbidden . </S>
</P>
<P>
<S ID='S-61' AZ='OWN'> Just because an action is obligatory with respect to a set of rules R does not mean that the agent will perform the action . </S>
<S ID='S-62' AZ='CTR'> So we do not adopt the model suggested by <REF TYPE='A'>Shoham and Tennenholtz 1992</REF> in which agents ' behavior cannot violate the defined social laws . </S>
<S ID='S-63' AZ='OWN'> If an obligation is not satisfied , then this means that one of the rules must have been broken . </S>
<S ID='S-64' AZ='OWN'> We assume that agents generally plan their actions to violate as few rules as possible , and so obligated actions will usually occur . </S>
<S ID='S-65' AZ='OWN'> But when they directly conflict with the agent 's personal goals , the agent may choose to violate them . </S>
<S ID='S-66' AZ='OWN'> Obligations are quite different from and can not be reduced to intentions and goals . </S>
<S ID='S-67' AZ='OWN'> In particular , an agent may be obliged to do an action that is contrary to his goals ( for example , consider a child who has to apologize for hitting her younger brother ) . </S>
</P>
<P>
<S ID='S-68' AZ='OWN'> Obligations also cannot be reduced to simple expectations , although obligations may act as a source of expectations . </S>
<S ID='S-69' AZ='OWN'> Expectations can be used to guide the action interpretation and plan-recognition processes ( as proposed by <REF TYPE='A'>Carberry 1990</REF> ) , but expectations do not in and of themselves provide a sufficient motivation for an agent to perform the expected action - in many cases there is nothing wrong with doing the unexpected or not performing an expected action . </S>
<S ID='S-70' AZ='OWN'> The interpretation of an utterance will often be clear even without coherence with prior expectations . </S>
<S ID='S-71' AZ='OWN'> We need to allow for the possibility that an agent has performed an action even when this violates expectations . </S>
<S ID='S-72' AZ='OWN'> If an agent actually violates obligations as well then the agent can be held accountable . </S>
</P>
<P>
<S ID='S-73' AZ='OWN'> Specific obligations arise from a variety of sources . </S>
<S ID='S-74' AZ='OWN'> In a conversational setting , an accepted offer or a promise will incur an obligation . </S>
<S ID='S-75' AZ='OWN'> Also , a command or request by the other party will bring about an obligation to perform the requested action . </S>
<S ID='S-76' AZ='OWN'> If the obligation is to say something then we call this a discourse obligation . </S>
<S ID='S-77' AZ='OWN'> Our model of obligation is very simple . </S>
<S ID='S-78' AZ='OWN'> We use a set of rules that encode discourse conventions . </S>
<S ID='S-79' AZ='OWN'> Whenever a new conversation act is determined to have been performed , then any future action that can be inferred from the conventional rules becomes an obligation . </S>
<S ID='S-80' AZ='OWN'> We use a simple forward chaining technique to introduce obligations . </S>
</P>
<P>
<S ID='S-81' AZ='OWN'> Some obligation rules based on the performance of conversation acts are summarized in Table <CREF/> . </S>
<S ID='S-82' AZ='OWN'> When an agent performs a promise to perform an action , or performs an acceptance of a suggestion or request by another agent to perform an action , the agent obliges itself to achieve the action in question . </S>
<S ID='S-83' AZ='OWN'> When another agent requests that some action be performed , the request itself brings an obligation to address the request : that is , either to accept it or to reject it ( and make the decision known to the requester ) - the requestee is not permitted to ignore the request . </S>
<S ID='S-84' AZ='OWN'> A question establishes an obligation to answer the question . </S>
<S ID='S-85' AZ='OWN'> If an utterance has not been understood , or is believed to be deficient in some way , this brings about an obligation to repair the utterance . </S>
</P>
<IMAGE ID='I-0'/>
<DIV DEPTH='2'>
<HEADER ID='H-3'> Obligations and Behavior </HEADER>
<P>
<S ID='S-86' AZ='OWN'> Obligations ( or at least beliefs that the agent has obligations ) will thus form an important part of the reasoning process of a deliberative agent , e.g. , the architecture proposed by <REF TYPE='A'>Bratman et al. 1988</REF> . </S>
<S ID='S-87' AZ='OWN'> In addition to considering beliefs about the world , which will govern the possibility of performing actions and likelyhood of success , and desires or goals which will govern the utility or desirability of actions , a social agent will also have to consider obligations , which govern the permissibility of actions . </S>
</P>
<P>
<S ID='S-88' AZ='OWN'> There are a large number of strategies which may be used to incorporate obligations into the deliberative process , based on how much weight they are given compared to the agents goals . </S>
<S ID='S-89' AZ='OTH'> <REF TYPE='A'>Conte and Castelfranchi 1993</REF> present several strategies of moving from obligations to actions , including : automatically performing an obligated action , adopting all obligations as goals , or adopting an obligated action as a goal only when performing the action results in a state desired by the agent . </S>
<S ID='S-90' AZ='OTH'> In the latter cases , these goals still might conflict with other goals of the agent , and so are not guaranteed to be performed . </S>
</P>
<P>
<S ID='S-91' AZ='OWN'> In general , we will want to allow action based on obligations to supersede performance of intended actions . </S>
<S ID='S-92' AZ='OWN'> For instance , consider an agent with an intention to do something as soon as possible . </S>
<S ID='S-93' AZ='OWN'> If an obligation is imposed , it will still be possible to perform the intended action , but a well-behaved agent might need to delay performance until the obligation is dealt with . </S>
<S ID='S-94' AZ='OWN'> For example , if the intention is to perform a series of inform acts , and then a listener requests repair of one , a well-behaved agent will repair that inform before proceeding to initiate the next intended one . </S>
</P>
</DIV>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-4'> Using Discourse Obligations in a Dialogue System </HEADER>
<P>
<S ID='S-95' AZ='AIM'> We have built a system that explicitly uses discourse obligations and communicative intentions to partake in natural dialogue . </S>
<S ID='S-96' AZ='BAS'> This system plays the role of the dialogue manager in the TRAINS dialogue system , which acts as an intelligent planning assistant in a transportation domain . </S>
<S ID='S-97' AZ='OTH'> While this is a domain where the assumption of co-operation is generally valid , the obligation model still provides for a much simpler analysis of the discourse behavior than a strongly plan-based account . </S>
<S ID='S-98' AZ='OTH'> An example of a dialogue that the TRAINS system can engage in is shown in Figure <CREF/> . </S>
<S ID='S-99' AZ='TXT'> Below we describe parts of the discourse model in more detail and then show how it is used to account for aspects of this dialogue . </S>
</P>
<IMAGE ID='I-1'/>
<P>
<S ID='S-100' AZ='OTH'> The TRAINS System <REF TYPE='P' SELF="YES">Allen and Schubert 1991</REF> is a large integrated natural language conversation and plan reasoning system . </S>
<S ID='S-101' AZ='OTH'> We concentrate here , however , on just one part of that system , the discourse actor which drives the actions of the dialogue manager module . </S>
<S ID='S-102' AZ='OTH'> Figure <CREF/> illustrates the system from the viewpoint of the dialogue manager . </S>
</P>
<IMAGE ID='I-2'/>
<P>
<S ID='S-103' AZ='OTH'> The dialogue manager is responsible for maintaining the flow of conversation and making sure that the conversational goals are met . </S>
<S ID='S-104' AZ='OTH'> For this system , the main goals are that an executable plan which meets the user 's goals is constructed and agreed upon by both the system and the user and then that the plan is executed . </S>
</P>
<P>
<S ID='S-105' AZ='OTH'> The dialogue manager must keep track of the current state of the dialogue , determine the effects of observed conversation acts , generate utterances back , and send commands to the domain plan reasoner and domain plan executor when appropriate . </S>
<S ID='S-106' AZ='OTH'> Conversational action is represented using the theory of Conversation Acts <REF TYPE='P' SELF="YES">Traum and Hinkelman 1992</REF> which augments traditional Core Speech Acts with levels of acts for turn-taking , grounding <REF TYPE='P'>Clark and Schaefer 1989</REF> , and argumentation . </S>
<S ID='S-107' AZ='OTH'> Each utterance will generally contain acts ( or partial acts ) at each of these levels . </S>
</P>
<DIV DEPTH='2'>
<HEADER ID='H-5'> Representing Mental Attitudes </HEADER>
<P>
<S ID='S-108' AZ='OTH'> As well as representing general obligations within the temporal logic used to represent general knowledge , the system also maintains two stacks ( one for each conversant ) of pending discourse obligations . </S>
<S ID='S-109' AZ='OTH'> Each obligation on the stack is represented as an obligation type paired with a content . </S>
<S ID='S-110' AZ='OTH'> The stack structure is appropriate because , in general , one must respond to the most recently imposed obligation first . </S>
<S ID='S-111' AZ='OTH'> As explained in Section <CREF/> , the system will attend to obligations before considering other parts of the discourse context . </S>
<S ID='S-112' AZ='OTH'> Most obligations will result in the formation of intentions to communicate something back to the user . </S>
<S ID='S-113' AZ='OTH'> When the intentions are formed , the obligations are removed from the stack , although they have not yet actually been met . </S>
<S ID='S-114' AZ='OTH'> If , for some reason , the system dropped the intention without satisfying it and the obligation were still current , the system would place them back on the stack . </S>
</P>
<P>
<S ID='S-115' AZ='OTH'> The over-riding goal for the TRAINS domain is to construct and execute a plan that is shared between the two participants . </S>
<S ID='S-116' AZ='OTH'> This leads to other goals such as accepting proposals that the other agent has suggested , performing domain plan synthesis , proposing to the other agent plans that the domain plan reasoner has constructed , or executing a completed plan . </S>
</P>
</DIV>
<DIV DEPTH='2'>
<HEADER ID='H-6'> The Discourse Actor Algorithm </HEADER>
<P>
<S ID='S-117' AZ='OWN'> In designing an agent to control the behavior of the dialogue manager , we choose a reactive approach in which the system will not deliberate and add new intentions until after it has performed the actions which are already intended . </S>
<S ID='S-118' AZ='OWN'> As shown above , though , new obligations will need to be addressed before performing intended actions . </S>
<S ID='S-119' AZ='OWN'> The agent 's deliberative behavior could thus be characterized in an abstract sense as : </S>
</P>
<IMAGE ID='I-3'/>
<P>
<S ID='S-120' AZ='OWN'> When deciding what to do next , the agent first considers obligations and decides how to update the intentional structure ( add new goals or intentions ) based on these obligations . </S>
<S ID='S-121' AZ='OWN'> Obligations might also lead directly to immediate action . </S>
<S ID='S-122' AZ='OWN'> If there are no obligations , then the agent will consider its intentions and perform any actions which it can to satisfy these intentions . </S>
<S ID='S-123' AZ='OWN'> If there are no performable intentions , then the system will deliberate on its overall goals and perhaps adopt some new intentions ( which can then be performed on the next iteration ) . </S>
</P>
<P>
<S ID='S-124' AZ='OWN'> For the discourse actor , special consideration must be given to the extra constraints that participation in a conversation imposes . </S>
<S ID='S-125' AZ='OWN'> This includes some weak general obligations ( such as acknowledging utterances by others and not interrupting ) as well as some extra goals coming from the domain setting to maintain a shared view of the world and the domain plans which are to be executed . </S>
<S ID='S-126' AZ='OWN'> We prioritize the sources for the deliberations of the actor as follows : </S>
</P>
<P>
<S ID='S-127' TYPE='ITEM' AZ='OWN'> Discourse Obligations from Table <CREF/> </S>
<S ID='S-128' TYPE='ITEM' AZ='OWN'> Weak Obligation : Don't interrupt user 's turn </S>
<S ID='S-129' TYPE='ITEM' AZ='OWN'> Intended Speech Acts </S>
<S ID='S-130' TYPE='ITEM' AZ='OWN'> Weak Obl : Grounding ( coordinate mutual beliefs ) </S>
<S ID='S-131' TYPE='ITEM' AZ='OWN'> Discourse Goals : Domain Plan Negotiation </S>
<S ID='S-132' TYPE='ITEM' AZ='OWN'> High-level Discourse Goals </S>
</P>
<P>
<S ID='S-133' AZ='OWN'> The implemented actor serializes consideration of these sources into the algorithm in Figure <CREF/> . </S>
</P>
<IMAGE ID='I-4'/>
<P>
<S ID='S-134' AZ='OWN'> The updating of the conversational state due to perceived conversation acts or actions of other modules of the system progresses asynchronously with the operation of the discourse actor . </S>
<S ID='S-135' AZ='OWN'> Whenever the discourse actor is active , it will first decide on which task to attempt , according to the priorities given in Figure <CREF/> , and then work on that task . </S>
<S ID='S-136' AZ='OWN'> After completing a particular task , it will then run through the loop again , searching for the next task , although by then the context may have changed due to , e.g. , the observance of a new utterance from the user . </S>
<S ID='S-137' AZ='OWN'> The actor is always running and decides at each iteration whether to speak or not ( according to turn-taking conventions ) ; the system does not need to wait until a user utterance is observed to invoke the actor , and need not respond to user utterances in an utterance by utterance fashion . </S>
</P>
<P>
<S ID='S-138' AZ='OWN'> Lines 2 - 3 of the algorithm in Figure <CREF/> indicate that the actor 's first priority is fulfilling obligations . </S>
<S ID='S-139' AZ='OWN'> If there are any , then the actor will do what it thinks best to meet those obligations . </S>
<S ID='S-140' AZ='OWN'> If there is an obligation to address a request , the actor will evaluate whether the request is reasonable , and if so , accept it , otherwise reject it , or , if it does not have sufficient information to decide , attempt to clarify the parameters . </S>
<S ID='S-141' AZ='OWN'> In any case , part of meeting the obligation will be to form an intention to tell the user of the decision ( e.g. , the acceptance , rejection , or clarification ) . </S>
<S ID='S-142' AZ='OWN'> When this intention is acted upon and the utterance produced , the obligation will be discharged . </S>
<S ID='S-143' AZ='OWN'> Other obligation types are to repair an uninterpretable utterance or one in which the presuppositions are violated , or to answer a question . </S>
<S ID='S-144' AZ='OWN'> In question answering , the actor will query its beliefs and will answer depending on the result , which might be that the system does not know the answer . </S>
</P>
<P>
<S ID='S-145' AZ='OWN'> In most cases , the actor will merely form the intention to produce the appropriate utterance , waiting for a chance , according to turn-taking conventions , to actually generate the utterance . </S>
<S ID='S-146' AZ='OWN'> In certain cases , though , such as a repair , the system will actually try to take control of the turn and produce an utterance immediately . </S>
<S ID='S-147' AZ='OWN'> For motivations other than obligations , the system adopts a fairly `` relaxed '' conversational style ; it does not try to take the turn until given it by the user unless the user pauses long enough that the conversation starts to lag ( lines 14 - 17 ) . </S>
<S ID='S-148' AZ='OWN'> When the system does not have the turn , the conversational state will still be updated , but the actor will not try to deliberate or act . </S>
</P>
<P>
<S ID='S-149' AZ='OWN'> When the system does have the turn , the actor first ( after checking obligations ) examines its intended conversation acts . </S>
<S ID='S-150' AZ='OWN'> If there are any , it calls the generator to produce an utterance ( lines 5 - 6 of the discourse actor algorithm ) . </S>
<S ID='S-151' AZ='OWN'> Whatever utterances are produced are then reinterpreted ( as indicated in Figure <CREF/> ) and the conversational state updated accordingly . </S>
<S ID='S-152' AZ='OWN'> This might , of course , end up in releasing the turn . </S>
<S ID='S-153' AZ='OWN'> It might not be convenient to generate all the intended acts in one utterance , in which case there will remain some intended acts left for future utterances to take care of ( unless the subsequent situation merits dropping those intentions ) . </S>
<S ID='S-154' AZ='OWN'> Only intended speech acts that are part of the same argumentation acts as those which are uttered will be kept as intentions - others will revert back to whatever caused the intention to be formed , although subsequent deliberation might cause the intentions to be re-adopted . </S>
</P>
<P>
<S ID='S-155' AZ='OWN'> If there are no intended conversation acts , the next thing the actor considers is the grounding situation ( lines 7 - 8 ) . </S>
<S ID='S-156' AZ='OWN'> The actor will try to make it mutually believed ( or grounded ) whether particular speech acts have been performed . </S>
<S ID='S-157' AZ='OWN'> This will involve acknowledging or repairing user utterances , as well as repairing and requesting acknowledgement of the system 's own utterances . </S>
<S ID='S-158' AZ='OWN'> Generally , grounding is considered less urgent than acting based on communicative intentions , although some grounding acts will be performed on the basis of obligations which arise while interpreting prior utterances . </S>
</P>
<P>
<S ID='S-159' AZ='OWN'> If all accessible utterances are grounded , the actor then considers the negotiation of domain beliefs and intentions ( lines 9 - 10 ) . </S>
<S ID='S-160' AZ='OWN'> The actor will try to work towards a shared domain plan , adding intentions to perform the appropriate speech acts to work towards this goal . </S>
<S ID='S-161' AZ='OWN'> This includes accepting , rejecting , or requesting retraction of user proposals , requesting acceptance of or retracting system proposals , and initiating new system proposals or counterproposals . </S>
</P>
<P>
<S ID='S-162' AZ='OWN'> The actor will first look for User proposals which are not shared . </S>
<S ID='S-163' AZ='OWN'> If any of these are found , it will add an intention to accept the proposal , unless the proposal is deficient in some way ( e.g. , it will not help towards the goal or the system has already come up with a better alternative ) . </S>
<S ID='S-164' AZ='OWN'> In this latter case , the system will reject the user 's proposal and present or argue for its own proposal . </S>
<S ID='S-165' AZ='OWN'> Next , the actor will look to see if any of its own proposals have not been accepted , requesting the user to accept them if they have been simply acknowledged , or retracting or reformulating them if they have already been rejected . </S>
<S ID='S-166' AZ='OWN'> Finally , the actor will check its private plans for any parts of the plan which have not yet been proposed . </S>
<S ID='S-167' AZ='OWN'> If it finds any here , it will adopt an intention to make a suggestion to the user . </S>
</P>
<P>
<S ID='S-168' AZ='OWN'> If none of the more local conversational structure constraints described above require attention , then the actor will concern itself with its actual high-level goals . </S>
<S ID='S-169' AZ='OWN'> For the TRAINS system , this will include making calls to the domain plan reasoner and domain executor , which will often return material to update the system 's private view of the plan and initiate its own new proposals . </S>
<S ID='S-170' AZ='OWN'> It is also at this point that the actor will take control of the conversation , pursuing its own objectives rather than responding to those of the user . </S>
</P>
<P>
<S ID='S-171' AZ='OWN'> Finally , if the system has no unmet goals that it can work towards achieving ( line 13 ) , it will hand the turn back to the user or try to end the conversation if it believes the user 's goals have been met as well . </S>
</P>
</DIV>
<DIV DEPTH='2'>
<HEADER ID='H-7'> Examples </HEADER>
<P>
<S ID='S-172' AZ='OWN'> The functioning of the actor can be illustrated by its behavior in the dialogue in Figure <CREF/> . </S>
<S ID='S-173' AZ='OWN'> While the discussion here is informal and skips some details , the dialogue is actually processed in this manner by the implemented system . </S>
<S ID='S-174' AZ='BAS'> More detail both on the dialogue manager and its operation on this example can be found in <REF SELF="YES" TYPE='A'>Traum 1994</REF> . </S>
</P>
<P>
<S ID='S-175' AZ='OWN'> Utterance <CREF/> is interpreted as performing two Core Speech Acts . </S>
<S ID='S-176' AZ='OWN'> It is interpreted ( literally ) as the initiation of an inform about an obligation to perform a domain action ( shipping the oranges ) . </S>
<S ID='S-177' AZ='OWN'> This utterance is also seen as ( the initiation of ) an ( indirect ) suggestion that this action be the goal of a shared domain plan to achieve the performance of the action . </S>
<S ID='S-178' AZ='OWN'> In addition , this utterance releases the turn to the system . </S>
<S ID='S-179' AZ='OWN'> Figure <CREF/> shows the relevant parts of the discourse state after interpretation of this utterance . </S>
</P>
<IMAGE ID='I-5'/>
<P>
<S ID='S-180' AZ='OWN'> After interpreting utterance <CREF/> , the system first decides to acknowledge this utterance ( lines 7 - 8 in the actor algorithm ) - moving the suggestion from an unacknowledged to unaccepted - and then to accept the proposal ( lines 9 - 10 ) . </S>
<S ID='S-181' AZ='OWN'> Finally , the system acts on the intentions produced by these deliberations ( lines 5 - 6 ) and produces the combined acknowledgement / acceptance of utterance <CREF/> . </S>
<S ID='S-182' AZ='OWN'> This acceptance makes the goal shared and also satisfies the first of the discourse goals , that of getting the domain goal to work on . </S>
</P>
<P>
<S ID='S-183' AZ='OWN'> Utterances <CREF/> and <CREF/> are interpreted , but not responded to yet since the user keeps the turn ( in this case by following up with subsequent utterances before the system has a chance to act ) . </S>
<S ID='S-184' AZ='OWN'> Utterance <CREF/> invokes a discourse obligation on the system to respond to the User 's assertion in 3 - 7 and also gives the turn to the system . </S>
<S ID='S-185' AZ='OWN'> The resulting discourse context ( after the system decides to acknowledge ) is shown in Figure <CREF/> . </S>
</P>
<IMAGE ID='I-6'/>
<P>
<S ID='S-186' AZ='OWN'> The system queries its domain knowledge base and decides that the user is correct here ( there are , indeed , oranges at Corning ) , and so decides to meet this obligation ( lines 2 - 3 ) by answering in the affirmative . </S>
<S ID='S-187' AZ='OWN'> This results in forming an intention to inform , which is then realized ( along with the acknowledgement of the utterances ) by the production of utterance <CREF/> . </S>
</P>
<P>
<S ID='S-188' AZ='OWN'> Similar considerations hold for the system responses <CREF/> and <CREF/> . </S>
<S ID='S-189' AZ='OWN'> The reasoning leading up to utterance <CREF/> is similar to that leading to utterance <CREF/> . </S>
<S ID='S-190' AZ='OWN'> Here the user is suggesting domain actions to help lead to the goal , and the system , when it gets the turn , acknowledges and accepts this suggestion . </S>
</P>
<P>
<S ID='S-191' AZ='OWN'> Utterances <CREF/> , <CREF/> , and <CREF/> are interpreted as requests because of the imperative surface structure . </S>
<S ID='S-192' AZ='OWN'> The discourse obligation to address the request is incurred only when the system decides to acknowledge the utterances and ground them . </S>
<S ID='S-193' AZ='OWN'> After the decision to acknowledge , the obligations are incurred , and the system then addresses the requests , deciding to accept them all , and adding intentions to perform an accept speech act , which is then produced as 16 . </S>
</P>
<P>
<S ID='S-194' AZ='OWN'> Utterance <CREF/> is interpreted as a request for evaluation of the plan . </S>
<S ID='S-195' AZ='OWN'> When the system decided to acknowledge , this creates a discourse obligation to address the request . </S>
<S ID='S-196' AZ='OWN'> The system considers this ( invoking the domain plan reasoner to search the plan for problems or incomplete parts ) and decides that the plan will work , and so decides to perform the requested action - an evaluation speech act . </S>
<S ID='S-197' AZ='OWN'> This is then generated as <CREF/> . </S>
<S ID='S-198' AZ='OWN'> The discourse state after the decision to acknowledge is shown in Figure <CREF/> . </S>
</P>
<IMAGE ID='I-7'/>
<P>
<S ID='S-199' AZ='OWN'> After the user 's assent , the system then checks its goals , and , having already come up with a suitable plan , executes this plan in the domain by sending the completed plan to the domain plan executor . </S>
</P>
<P>
<S ID='S-200' AZ='OWN'> This example illustrates only a small fraction of the capabilities of the dialogue model . </S>
<S ID='S-201' AZ='OWN'> In this dialogue , the system needed only to follow the initiative of the user . </S>
<S ID='S-202' AZ='OWN'> However this architecture can handle varying degrees of initiative , while remaining responsive . </S>
<S ID='S-203' AZ='OWN'> The default behavior is to allow the user to maintain the initiative through the plan construction phase of the dialogue . </S>
<S ID='S-204' AZ='OWN'> If the user stops and asks for help , or even just gives up the initiative rather than continuing with further suggestions , the system will switch from plan recognition to plan elaboration and incrementally devise a plan to satisfy the goal ( although this plan would probably not be quite the same as the plan constructed in this dialogue ) . </S>
</P>
<P>
<S ID='S-205' AZ='OWN'> We can illustrate the system behaving more on the basis of goals than obligations with a modification of the previous example . </S>
<S ID='S-206' AZ='OWN'> Here , the user releases the turn back to the system after utterance <CREF/> , and the deliberation proceeds as follows : the system has no obligations , no communicative intentions , nothing is ungrounded , and there are no unaccepted proposals , so the system starts on its high-level goals . </S>
<S ID='S-207' AZ='OWN'> Given its goal to form a shared plan , and the fact that the current plan ( consisting of the single abstract move-commodity action ) is not executable , the actor will call the domain plan reasoner to elaborate the plan . </S>
<S ID='S-208' AZ='OWN'> This will return a list of augmentations to the plan which can be safely assumed ( including a move-engine event which generates the move-commodity , given the conditions that the oranges are in a boxcar which is attached to the engine ) , as well as some choice point where one of several possibilities could be added ( e.g. , a choice of the particular engine or boxcar to use ) . </S>
</P>
<P>
<S ID='S-209' AZ='OWN'> Assuming that the user still has not taken the turn back , the system can now propose these new items to the user . </S>
<S ID='S-210' AZ='OWN'> The choice could be resolved in any of several ways : the domain executor could be queried for a preference based on prior experience , or the system could put the matter up to the user in the form of an alternative question , or it could make an arbitrary choice and just suggest one to the user . </S>
</P>
<P>
<S ID='S-211' AZ='OWN'> The user will now be expected to acknowledge and react to these proposals . </S>
<S ID='S-212' AZ='OWN'> If the system does not get an acknowledgement , it will request acknowledgement the next time it considers the grounding situation . </S>
<S ID='S-213' AZ='OWN'> If the proposal is not accepted or rejected , the system can request an acceptance . </S>
<S ID='S-214' AZ='OWN'> If a proposal is rejected , the system can negotiate and offer a counterproposal or accept a counter proposal from the user . </S>
</P>
<P>
<S ID='S-215' AZ='OWN'> Since the domain plan reasoner <REF TYPE='P'>Ferguson 1994</REF> performs both plan recognition and plan elaboration in an incremental fashion , proposals from system and user can be integrated naturally in a mixed-initiative fashion . </S>
<S ID='S-216' AZ='OWN'> The termination condition will be a shared executable plan which achieves the goal , and each next action in the collaborative planning process will be based on local considerations . </S>
</P>
</DIV>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-8'> Discussion </HEADER>
<P>
<S ID='S-217' ABSTRACTC='A-0' AZ='OWN'> We have argued that obligations play an important role in accounting for the interactions in dialog . </S>
<S ID='S-218' AZ='OWN'> Obligations do not replace the plan-based model , but augment it . </S>
<S ID='S-219' AZ='OWN'> The resulting model more readily accounts for discourse behavior in adversarial situations and other situations where it is implausible that the agents adopt each others goals . </S>
<S ID='S-220' AZ='OWN'> The obligations encode learned social norms , and guide each agent 's behavior without the need for intention recognition or the use of shared plans at the discourse level . </S>
<S ID='S-221' AZ='OWN'> While such complex intention recognition may be required in some complex interactions , it is not needed to handle the typical interactions of everyday discourse . </S>
<S ID='S-222' AZ='OWN'> Furthermore , there is no requirement for mutually-agreed upon rules that create obligations . </S>
<S ID='S-223' AZ='OWN'> Clearly , the more two agents agree on the rules , the smoother the interaction becomes , and some rules are clearly virtually universal . </S>
<S ID='S-224' AZ='OWN'> But each agent has its own set of individual rules , and we do not need to appeal to shared knowledge to account for local discourse behavior . </S>
</P>
<P>
<S ID='S-225' AZ='CTR'> We have also argued that an architecture that uses obligations provides a much simpler implementation than the strong plan-based approaches . </S>
<S ID='S-226' AZ='OWN'> In particular , much of local discourse behavior can arise in a `` reactive manner '' without the need for complex planning . </S>
<S ID='S-227' AZ='OWN'> The other side of the coin , however , is a new set of problems that arise in planning actions that satisfy the multiple constraints that arise from the agent 's personal goals and perceived obligations . </S>
</P>
<P>
<S ID='S-228' AZ='OWN'> The model presented here allows naturally for a mixed-initiative conversation and varying levels of co-operativity . </S>
<S ID='S-229' AZ='OWN'> Following the initiative of the other can be seen as an obligation driven process , while leading the conversation will be goal driven . </S>
<S ID='S-230' AZ='OWN'> Representing both obligations and goals explicitly allows the system to naturally shift from one mode to the other . </S>
<S ID='S-231' AZ='OWN'> In a strongly co-operative domain , such as TRAINS , the system can subordinate working on its own goals to locally working on concerns of the user , without necessarily having to have any shared discourse plan . </S>
<S ID='S-232' AZ='OWN'> In less co-operative situations , the same architecture will allow a system to still adhere to the conversational conventions , but respond in different ways , perhaps rejecting proposals and refusing to answer questions . </S>
</P>
</DIV>
</BODY>
<REFERENCELIST>
<REFERENCE>
<SURNAME>Airenti</SURNAME>, Gabriella; <SURNAME>Bara</SURNAME>, Bruno G.; and <SURNAME>Colombetti</SURNAME>, Marco <DATE>1993</DATE>.
Conversation and behavior games in the pragmatics of dialogue.
Cognitive Science 17:197-256.
</REFERENCE>
<REFERENCE>
<SURNAME>Allen</SURNAME>, James and <SURNAME>Perrault</SURNAME>, C. <DATE>1980</DATE>.
Analyzing intention in utterances.
Artificial Intelligence 15(3):143-178.
</REFERENCE>
<REFERENCE>
<SURNAME>Allen</SURNAME>, James F. and <SURNAME>Schubert</SURNAME>, Lenhart K. <DATE>1991</DATE>.
The TRAINS project.
TRAINS Technical Note 91-1, Computer Science Dept. University of
  Rochester.
</REFERENCE>
<REFERENCE>
<SURNAME>Bratman</SURNAME>, Michael E.; <SURNAME>Israel</SURNAME>, David J.; and <SURNAME>Pollack</SURNAME>, Martha E. <DATE>1988</DATE>.
Plans and resource-bounded practical reasoning.
Technical Report TR425R, SRI International.
Appears in Computational Intelligence, Vol. 4, No. 4, <DATE>1988</DATE>.
</REFERENCE>
<REFERENCE>
<SURNAME>Carberry</SURNAME>, S. <DATE>1990</DATE>.
Plan Recognition in Natural Language Dialogue.
The MIT Press, Cambridge, MA.
</REFERENCE>
<REFERENCE>
<SURNAME>Clark</SURNAME>, Herbert H. and <SURNAME>Schaefer</SURNAME>, Edward F. <DATE>1989</DATE>.
Contributing to discourse.
Cognitive Science 13:259 - 94.
 also appears as Chapter 5 in .  
</REFERENCE>
<REFERENCE>
<SURNAME>Cohen</SURNAME>, Phillip R. and <SURNAME>Levesque</SURNAME>, Hector J. <DATE>1991</DATE>.
Confirmations and joint action.
In Proceedings IJCAI-91.
951-957.
</REFERENCE>
<REFERENCE>
<SURNAME>Cohen</SURNAME>, Phillip R. and <SURNAME>Perrault</SURNAME>, C. R. <DATE>1979</DATE>.
Elements of a plan-based theory of speech acts.
Cognitive Science 3(3):177-212.
</REFERENCE>
<REFERENCE>
<SURNAME>Conte</SURNAME>, Rosaria and <SURNAME>Castelfranchi</SURNAME>, Cristiano <DATE>1993</DATE>.
Norms as mental objects. from normative beliefs to normative goals.
In Working Notes AAAI Spring Symposium on Reasoning about Mental
  States: Formal Theories and Applications.
40-47.
</REFERENCE>
<REFERENCE>
<SURNAME>Ferguson</SURNAME>, George  <DATE>1994</DATE>.
Domain plan reasoning in TRAINS-93.
Trains technical note, Computer Science Dept. University of
  Rochester.
</REFERENCE>
<REFERENCE>
<SURNAME>Gross</SURNAME>, Derek; <SURNAME>Allen</SURNAME>, James; and <SURNAME>Traum</SURNAME>, David <DATE>1993</DATE>.
The TRAINS 91 dialogues.
TRAINS Technical Note 92-1, Computer Science Dept. University of
  Rochester.
</REFERENCE>
<REFERENCE>
<SURNAME>Grosz</SURNAME>, Barbara and <SURNAME>Sidner</SURNAME>, Candice <DATE>1986</DATE>.
Attention, intention, and the structure of discourse.
CL 12(3):175-204.
</REFERENCE>
<REFERENCE>
<SURNAME>Grosz</SURNAME>, Barbara J. and <SURNAME>Sidner</SURNAME>, Candace L. <DATE>1990</DATE>.
Plans for discourse.
In Cohen, P. R.; Morgan, J.; and Pollack, M. E., editors <DATE>1990</DATE>, 
  Intentions in Communication. MIT Press.
</REFERENCE>
<REFERENCE>
<SURNAME>Kowtko</SURNAME>, J.; <SURNAME>Isard</SURNAME>, S.; and <SURNAME>Doherty</SURNAME>, G. <DATE>1991</DATE>.
Conversational games within dialogue.
In Proceedings of the ESPRIT Workshop on Discourse Coherence.
</REFERENCE>
<REFERENCE>
<SURNAME>Litman</SURNAME>, D. J. and <SURNAME>Allen</SURNAME>, J. F. <DATE>1987</DATE>.
A plan recognition model for subdialogues in conversation.
Cognitive Science 11:163-200.
</REFERENCE>
<REFERENCE>
<SURNAME>Mann</SURNAME>, William C. <DATE>1988</DATE>.
Dialogue games: Conventions of human interaction.
Argumentation 2:511-532.
</REFERENCE>
<REFERENCE>
<SURNAME>McRoy</SURNAME>, Susan <DATE>1993</DATE>.
Abductive Interpretation and Reinterpretation of Natural
  Language Utterances.
Ph.D. Dissertation, University of Toronto.
Reproduced as TR CSRI-288 Department of Computer Science, University
  of Toronto.
</REFERENCE>
<REFERENCE>
<SURNAME>Schegloff</SURNAME>, E. A. and <SURNAME>Sacks</SURNAME>, H. <DATE>1973</DATE>.
Opening up closings.
Semiotica 7:289-327.
</REFERENCE>
<REFERENCE>
<SURNAME>Shoham</SURNAME>, Yoav and <SURNAME>Tennenholtz</SURNAME>, Moshe <DATE>1992</DATE>.
On the synthesis of useful social laws for artificial agent
  societies.
In Proceedings AAAI-92.
276-281.
</REFERENCE>
<REFERENCE>
<SURNAME>Traum</SURNAME>, David R. and <SURNAME>Hinkelman</SURNAME>, Elizabeth A. <DATE>1992</DATE>.
Conversation acts in task-oriented spoken dialogue.
Computational Intelligence 8(3):575-599.
Special Issue on Non-literal language.
</REFERENCE>
<REFERENCE>
<SURNAME>Traum</SURNAME>, David R.  <DATE>1994</DATE>.
The TRAINS-93 dialogue manager.
Trains technical note, Computer Science Dept. University of
  Rochester.
</REFERENCE>
</REFERENCELIST>
</PAPER>
