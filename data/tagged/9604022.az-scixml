<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE PAPER SYSTEM "paper-structure.dtd">
<PAPER>
<METADATA>
<FILENO>9604022</FILENO>
<APPEARED><CONFERENCE>ACL</CONFERENCE><YEAR>1996</YEAR></APPEARED>
<CLASSIFICATION> Lg.Pr.St  Lg.Pr.Ml </CLASSIFICATION>
</METADATA>
<TITLE> Unsupervised Learning of Word-Category Guessing Rules </TITLE>
<AUTHORLIST>
<AUTHOR>Andrei Mikheev</AUTHOR>
</AUTHORLIST>
<ABSTRACT>
<A-S ID='A-0' DOCUMENTC='S-0' AZ='CTR'> Words unknown to the lexicon present a substantial problem to part-of-speech tagging . </A-S>
<A-S ID='A-1' DOCUMENTC='S-202' AZ='AIM'> In this paper we present a technique for fully unsupervised statistical acquisition of rules which guess possible parts-of-speech for unknown words . </A-S>
<A-S ID='A-2' DOCUMENTC='S-204' AZ='OWN'> Three complementary sets of word-guessing rules are induced from the lexicon and a raw corpus : prefix morphological rules , suffix morphological rules and ending-guessing rules . </A-S>
<A-S ID='A-3' AZ='CTR'> The learning was performed on the Brown Corpus data and rule-sets , with a highly competitive performance , were produced and compared with the state-of-the-art . </A-S>
</ABSTRACT>
<BODY>
<DIV DEPTH='1'>
<HEADER ID='H-0'> Introduction </HEADER>
<P>
<S ID='S-0' ABSTRACTC='A-0' AZ='BKG'> Words unknown to the lexicon present a substantial problem to part-of-speech ( POS ) tagging of real-world texts . </S>
<S ID='S-1' AZ='BKG'> Taggers assign a single POS - tag to a word-token , provided that it is known what parts-of-speech this word can take on in principle . </S>
<S ID='S-2' AZ='BKG'> So , first words are looked up in the lexicon . </S>
<S ID='S-3' AZ='BKG'> However , 3 to 5 % of word tokens are usually missing in the lexicon when tagging real-world texts . </S>
<S ID='S-4' AZ='BKG'> This is where word-POS guessers take their place -- they employ the analysis of word features , e.g. word leading and trailing characters , to figure out its possible POS categories . </S>
<S ID='S-5' AZ='OTH'> A set of rules which on the basis of ending characters of unknown words , assign them with sets of possible POS - tags is supplied with the Xerox tagger <REF TYPE='P'>Kupiec 1992</REF> . </S>
<S ID='S-6' AZ='OTH'> A similar approach was taken in <REF TYPE='A'>Weischedel et al. 1993</REF> where an unknown word was guessed given the probabilities for an unknown word to be of a particular POS , its capitalisation feature and its ending . </S>
<S ID='S-7' AZ='OTH'> In <REF TYPE='A'>Brill 1995</REF> a system of rules which uses both ending-guessing and more morphologically motivated rules is described . </S>
<S ID='S-8' AZ='OTH'> The best of these methods are reported to achieve 82 - 85 % of tagging accuracy on unknown words <REF  TYPE='P'>Brill 1995</REF>, <REF  TYPE='P'>Weischedel et al. 1993</REF> . </S>
</P>
<P>
<S ID='S-9' AZ='BKG'> The major topic in the development of word-POS guessers is the strategy which is to be used for the acquisition of the guessing rules . </S>
<S ID='S-10' AZ='OTH'> A rule-based tagger described in <REF TYPE='A'>Voutilainen 1995</REF> is equipped with a set of guessing rules which has been hand-crafted using knowledge of English morphology and intuition . </S>
<S ID='S-11' AZ='CTR'> A more appealing approach is an empirical automatic acquisition of such rules using available lexical resources . </S>
<S ID='S-12' AZ='OTH'> In <REF TYPE='A'>Zhang and Kim 1990</REF> a system for the automated learning of morphological word-formation rules is described . </S>
<S ID='S-13' AZ='OTH'> This system divides a string into three regions and from training examples infers their correspondence to underlying morphological features . </S>
<S ID='S-14' AZ='OTH'> <REF TYPE='A'>Brill 1995</REF> outlines a transformation-based learner which learns guessing rules from a pre-tagged training corpus . </S>
<S ID='S-15' AZ='OTH'> A statistical-based suffix learner is presented in <REF TYPE='A'>Schmid 1994</REF> . </S>
<S ID='S-16' AZ='OTH'> From a pre-tagged training corpus it constructs the suffix tree where every suffix is associated with its information measure . </S>
<S ID='S-17' AZ='CTR'> Although the learning process in these and some other systems is fully unsupervised and the accuracy of obtained rules reaches current state-of-the-art , they require specially prepared training data -- a pre-tagged training corpus , training examples , etc . </S>
</P>
<P>
<S ID='S-18' AZ='AIM'> In this paper we describe a new fully automatic technique for learning part-of-speech guessing rules . </S>
<S ID='S-19' AZ='OWN'> This technique does not require specially prepared training data and employs fully unsupervised statistical learning using the lexicon supplied with the tagger and word-frequencies obtained from a raw corpus . </S>
<S ID='S-20' AZ='OWN'> The learning is implemented as a two-staged process with feedback . </S>
<S ID='S-21' AZ='OWN'> First , setting certain parameters a set of guessing rules is acquired , then it is evaluated and the results of evaluation are used for re-acquisition of a better tuned rule-set . </S>
</P>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-1'> Guessing Rules Acquisition </HEADER>
<P>
<S ID='S-22' AZ='BKG'> As was pointed out above , one of the requirements in many techniques for automatic learning of part-of-speech guessing rules is specially prepared training data -- a pre-tagged training corpus , training examples , etc . </S>
<S ID='S-23' AZ='OWN'> In our approach we decided to reuse the data which come naturally with a tagger , viz. the lexicon . </S>
<S ID='S-24' AZ='OWN'> Another source of information which is used and which is not prepared specially for the task is a text corpus . </S>
<S ID='S-25' AZ='CTR'> Unlike other approaches we don't require the corpus to be pre-annotated but use it in its raw form . </S>
<S ID='S-26' AZ='OWN'> In our experiments we used the lexicon and word-frequencies derived from the Brown Corpus <REF TYPE='P'>Francis and Kucera 1982</REF> . </S>
<S ID='S-27' AZ='OWN'> There are a number of reasons for choosing the Brown Corpus data for training . </S>
<S ID='S-28' AZ='OWN'> The most important ones are that the Brown Corpus provides a model of general multi-domain language use , so general language regularities can be induced from it , and second , many taggers come with data trained on the Brown Corpus which is useful for comparison and evaluation . </S>
<S ID='S-29' AZ='OWN'> This , however , by no means restricts the described technique to that or any other tag-set , lexicon or corpus . </S>
<S ID='S-30' AZ='OWN'> Moreover , despite the fact that the training is performed on a particular lexicon and a particular corpus , the obtained guessing rules suppose to be domain and corpus independent and the only training-dependent feature is the tag-set in use . </S>
</P>
<P>
<S ID='S-31' AZ='OWN'> The acquisition of word-POS guessing rules is a three-step procedure which includes the rule extraction , rule scoring and rule merging phases . </S>
<S ID='S-32' AZ='OWN'> At the rule extraction phase , three sets of word-guessing rules ( morphological prefix guessing rules , morphological suffix guessing rules and ending-guessing rules ) are extracted from the lexicon and cleaned from coincidental cases . </S>
<S ID='S-33' AZ='OWN'> At the scoring phase , each rule is scored in accordance with its accuracy of guessing and the best scored rules are included into the final rule-sets . </S>
<S ID='S-34' AZ='OWN'> At the merging phase , rules which have not scored high enough to be included into the final rule-sets are merged into more general rules , then re-scored and depending on their score added to the final rule-sets . </S>
</P>
<DIV DEPTH='2'>
<HEADER ID='H-2'> Rule Extraction Phase </HEADER>
<DIV DEPTH='3'>
<HEADER ID='H-3'> Extraction of Morphological Rules </HEADER>
<P>
<S ID='S-35' AZ='OWN'> Morphological word-guessing rules describe how one word can be guessed given that another word is known . </S>
<S ID='S-36' AZ='OWN'> For example , the rule : <EQN/> says that prefixing the string `` un '' to a word , which can act as past form of verb ( VBD ) and participle ( VBN ) , produces an adjective ( JJ ) . </S>
<S ID='S-37' AZ='OWN'> For instance , by applying this rule to the word `` undeveloped '' , we first segment the prefix `` un '' and if the remaining part `` developed '' is found in the lexicon as ( VBD VBN ) , we conclude that the word `` undeveloped '' is an adjective ( JJ ) . </S>
<S ID='S-38' AZ='OWN'> The first POS - set in a guessing rule is called the initial class ( I-class ) and the POS - set of the guessed word is called the resulting class ( R-class ) . </S>
<S ID='S-39' AZ='OWN'> In the example above ( VBD VBN ) is the I-class of the rule and ( JJ ) is the R-class . </S>
</P>
<P>
<S ID='S-40' AZ='BKG'> In English , as in many other languages , morphological word formation is realised by affixation : prefixation and suffixation . </S>
<S ID='S-41' AZ='BKG'> Although sometimes the affixation is not just a straightforward concatenation of the affix with the stem , the majority of cases clearly obey simple concatenative regularities . </S>
<S ID='S-42' AZ='OWN'> So , we decided first to concentrate only on simple concatenative cases . </S>
<S ID='S-43' AZ='OWN'> There are two kinds of morphological rules to be learned : suffix rules ( <EQN/> ) -- rules which are applied to the tail of a word , and prefix rules ( <EQN/> ) -- rules which are applied to the beginning of a word . </S>
<S ID='S-44' AZ='OWN'> For example : </S>
</P>
<IMAGE ID='I-0'/>
<P>
<S ID='S-45' AZ='OWN'> says that if by stripping the suffix `` ed '' from an unknown word we produce a word with the POS - class ( NN VB ) , the unknown word is of the class - ( JJ VBD VBN ) . </S>
<S ID='S-46' AZ='OWN'> This rule works , for instance , for [ book <EQN/> booked ] , [ water <EQN/> watered ] , etc . </S>
<S ID='S-47' AZ='OWN'> To extract such rules a special operator <EQN/> is applied to every pair of words from the lexicon . </S>
<S ID='S-48' AZ='OWN'> It tries to segment an affix by leftmost string subtraction for suffixes and rightmost string subtraction for prefixes . </S>
<S ID='S-49' AZ='OWN'> If the subtraction results in an non-empty string it creates a morphological rule by storing the POS - class of the shorter word as the I-class and the POS - class of the longer word as the R-class . </S>
<S ID='S-50' AZ='OWN'> For example : </S>
</P>
<IMAGE ID='I-1'/>
<P>
<S ID='S-51' AZ='OWN'> The <EQN/> operator is applied to all possible lexicon-entry pairs and if a rule produced by such an application has already been extracted from another pair , its frequency count ( f ) is incremented . </S>
<S ID='S-52' AZ='OWN'> Thus two different sets of guessing rules -- prefix and suffix morphological rules together with their frequencies -- are produced . </S>
<S ID='S-53' AZ='OWN'> Next , from these sets of guessing rules we need to cut out infrequent rules which might bias the further learning process . </S>
<S ID='S-54' AZ='OWN'> To do that we eliminate all the rules with the frequency f less than a certain threshold <EQN/> . </S>
<S ID='S-55' AZ='OWN'> Such filtering reduces the rule-sets more than tenfold and does not leave clearly coincidental cases among the rules . </S>
</P>
</DIV>
<DIV DEPTH='3'>
<HEADER ID='H-4'> Extraction of Ending Guessing Rules </HEADER>
<P>
<S ID='S-56' AZ='OWN'> Unlike morphological guessing rules , ending-guessing rules do not require the main form of an unknown word to be listed in the lexicon . </S>
<S ID='S-57' AZ='OWN'> These rules guess a POS - class for a word just on the basis of its ending characters and without looking up its stem in the lexicon . </S>
<S ID='S-58' AZ='OWN'> Such rules are able to cover more unknown words than morphological guessing rules but their accuracy will not be as high . </S>
<S ID='S-59' AZ='OWN'> For example , an ending-guessing rule  </S>
</P>
<IMAGE ID='I-2'/>
<P>
<S ID='S-60' AZ='OWN'> says that if a word ends with `` ing '' it can be an adjective , a noun or a gerund . </S>
<S ID='S-61' AZ='OWN'> Unlike a morphological rule , this rule does not ask to check whether the substring preceeding the `` ing '' - ending is a word with a particular POS - tag . </S>
<S ID='S-62' AZ='OWN'> Thus an ending-guessing rule looks exactly like a morphological rule apart from the I-class which is always void . </S>
</P>
<P>
<S ID='S-63' AZ='OWN'> To collect such rules we set the upper limit on the ending length equal to five characters and thus collect from the lexicon all possible word-endings of length 1 , 2 , 3 , 4 and 5 , together with the POS - classes of the words where these endings were detected to appear . </S>
<S ID='S-64' AZ='OWN'> This is done by the operator <EQN/> . </S>
<S ID='S-65' AZ='OWN'> For example , from the word [ different ( JJ ) ] the <EQN/> operator will produce five ending-guessing rules : <EQN/> . </S>
<S ID='S-66' AZ='OWN'> The <EQN/> operator is applied to each entry in the lexicon in the way described for the <EQN/> operator of the morphological rules and then infrequent rules with <EQN/> are filtered out . </S>
</P>
</DIV>
</DIV>
<DIV DEPTH='2'>
<HEADER ID='H-5'> Rule Scoring Phase </HEADER>
<P>
<S ID='S-67' AZ='OWN'> Of course , not all acquired rules are equally good as plausible guesses about word-classes : some rules are more accurate in their guessings and some rules are more frequent in their application . </S>
<S ID='S-68' AZ='OWN'> So , for every acquired rule we need to estimate whether it is an effective rule which is worth retaining in the final rule-set . </S>
<S ID='S-69' AZ='OWN'> For such estimation we perform a statistical experiment as follows : for every rule we calculate the number of times this rule was applied to a word token from a raw corpus and the number of times it gave the right answer . </S>
<S ID='S-70' AZ='OWN'> Note that the task of the rule is not to disambiguate a word 's POS but to provide all and only possible POS s it can take on . </S>
<S ID='S-71' AZ='OWN'> If the rule is correct in the majority of times it was applied it is obviously a good rule . </S>
<S ID='S-72' AZ='OWN'> If the rule is wrong most of the times it is a bad rule which should not be included into the final rule-set . </S>
</P>
<P>
<S ID='S-73' AZ='OWN'> To perform this experiment we take one-by-one each rule from the rule-sets produced at the rule extraction phase , take each word token from the corpus and guess its POS - set using the rule if the rule is applicable to the word . </S>
<S ID='S-74' AZ='OWN'> For example , if a guessing rule strips a particular suffix and a current word from the corpus does not have this suffix , we classify these word and rule as incompatible and the rule as not applicable to that word . </S>
<S ID='S-75' AZ='OWN'> If the rule is applicable to the word we perform look-up in the lexicon for this word and then compare the result of the guess with the information listed in the lexicon . </S>
<S ID='S-76' AZ='OWN'> If the guessed POS - set is the same as the POS - set stated in the lexicon , we count it as success , otherwise it is failure . </S>
<S ID='S-77' AZ='OWN'> The value of a guessing rule , thus , closely correlates with its estimated proportion of success ( <EQN/> ) which is the proportion of all positive outcomes ( x ) of the rule application to the total number of the trials ( n ) , which are , in fact , attempts to apply the rule to all the compatible words in the corpus . </S>
<S ID='S-78' AZ='OWN'> We also smooth <EQN/> so as not to have zeros in positive or negative outcome probabilities : <EQN/> . </S>
</P>
<P>
<S ID='S-79' AZ='OWN'> <EQN/> estimate is a good indicator of rule accuracy . </S>
<S ID='S-80' AZ='OWN'> However , it frequently suffers from large estimation error due to insufficient training data . </S>
<S ID='S-81' AZ='OWN'> For example , if a rule was detected to work just twice and the total number of observations was also two , its estimate <EQN/> is very high ( 1 , or 0.83 for the smoothed version ) but clearly this is not a very reliable estimate because of the tiny size of the sample . </S>
<S ID='S-82' AZ='OWN'> Several smoothing methods have been proposed to reduce the estimation error . </S>
<S ID='S-83' AZ='OWN'> For different reasons all these smoothing methods are not very suitable in our case . </S>
<S ID='S-84' AZ='OWN'> In our approach we tackle this problem by calculating the lower confidence limit <EQN/> for the rule estimate . </S>
<S ID='S-85' AZ='OWN'> This can be seen as the minimal expected value of <EQN/> for the rule if we were to draw a large number of samples . </S>
<S ID='S-86' AZ='OWN'> Thus with certain confidence <EQN/> we can assume that if we used more training data , the rule estimate <EQN/> would be no worse than the <EQN/> limit . </S>
<S ID='S-87' AZ='OWN'> The lower confidence limit <EQN/> is calculated as : </S>
</P>
<IMAGE ID='I-3'/>
<P>
<S ID='S-88' AZ='OWN'> This function favours the rules with higher estimates obtained over larger samples . </S>
<S ID='S-89' AZ='OWN'> Even if one rule has a high estimate but that estimate was obtained over a small sample , another rule with a lower estimate but over a large sample might be valued higher . </S>
<S ID='S-90' AZ='OWN'> Note also that since <EQN/> itself is smoothed we will not have zeros in positive ( <EQN/> ) or negative ( <EQN/> ) outcome probabilities . </S>
<S ID='S-91' AZ='BAS'> This estimation of the rule value in fact resembles that used by <REF TYPE='A'>Tzoukermann et al. 1995</REF> for scoring POS - disambiguation rules for the French tagger . </S>
<S ID='S-92' AZ='CTR'> The main difference between the two functions is that there the z value was implicitly assumed to be 1 which corresponds to the confidence of 68 % . </S>
<S ID='S-93' AZ='OWN'> A more standard approach is to adopt a rather high confidence value in the range of 90 - 95 % . </S>
<S ID='S-94' AZ='OWN'> We adopted 90 % confidence for which <EQN/> . </S>
<S ID='S-95' AZ='OWN'> Thus we can calculate the score for the ith rule as :  <EQN/> </S>
</P>
<P>
<S ID='S-96' AZ='OWN'> Another important consideration for scoring a word-guessing rule is that the longer the affix or ending of the rule the more confident we are that it is not a coincidental one , even on small samples . </S>
<S ID='S-97' AZ='OWN'> For example , if the estimate for the word-ending `` o '' was obtained over a sample of 5 words and the estimate for the word-ending `` fulness '' was also obtained over a sample of 5 words , the later case is more representative even though the sample size is the same . </S>
<S ID='S-98' AZ='OWN'> Thus we need to adjust the estimation error in accordance with the length of the affix or ending . </S>
<S ID='S-99' AZ='OWN'> A good way to do that is to divide it by a value which increases along with the increase of the length . </S>
<S ID='S-100' AZ='OWN'> After several experiments we obtained : </S>
</P>
<IMAGE ID='I-4'/>
<P>
<S ID='S-101' AZ='OWN'> When the length of the affix or ending is 1 the estimation error is not changed since <EQN/> is 0 . </S>
<S ID='S-102' AZ='OWN'> For the rules with the affix or ending length of 2 the estimation error is reduced by <EQN/> , for the length 3 this will be <EQN/> , etc . </S>
<S ID='S-103' AZ='OWN'> The longer the length the smaller the sample which will be considered representative enough for a confident rule estimation . </S>
<S ID='S-104' AZ='OWN'> Setting the threshold <EQN/> at a certain level lets only the rules whose score is higher than the threshold to be included into the final rule-sets . </S>
<S ID='S-105' AZ='TXT'> The method for setting up this threshold is based on empirical evaluations of the rule-sets and is described in Section <CREF/> . </S>
</P>
</DIV>
<DIV DEPTH='2'>
<HEADER ID='H-6'> Rule Merging Phase </HEADER>
<P>
<S ID='S-106' AZ='OWN'> Rules which have scored lower than the threshold <EQN/> can be merged into more general rules which if scored above the threshold are also included into the final rule-sets . </S>
<S ID='S-107' AZ='OWN'> We can merge two rules which have scored below the threshold and have the same affix ( or ending ) and the initial class ( I ) . </S>
<S ID='S-108' AZ='OWN'> The score of the resulting rule will be higher than the scores of the merged rules since the number of positive observations increases and the number of the trials remains the same . </S>
<S ID='S-109' AZ='OWN'> After a successful application of the merging , the resulting rule substitutes the two merged ones . </S>
<S ID='S-110' AZ='OWN'> To perform such rule-merging over a rule-set , first , the rules which have not been included into the final set are sorted by their score and best-scored rules are merged first . </S>
<S ID='S-111' AZ='OWN'> This is done recursively until the score of the resulting rule does not exceed the threshold in which case it is added to the final rule-set . </S>
<S ID='S-112' AZ='OWN'> This process is applied until no merges can be done to the rules which have scored below the threshold . </S>
</P>
</DIV>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-7'> Direct Evaluation Stage </HEADER>
<IMAGE ID='I-5'/>
<P>
<S ID='S-113' AZ='OWN'> There are two important questions which arise at the rule acquisition stage - how to choose the scoring threshold <EQN/> and what is the performance of the rule-sets produced with different thresholds . </S>
<S ID='S-114' AZ='OWN'> The task of assigning a set of POS - tags to a word is actually quite similar to the task of document categorisation where a document should be assigned with a set of descriptors which represent its contents . </S>
<S ID='S-115' AZ='OWN' TYPE='ITEM'> The performance of such assignment can be measured in : </S>
</P>
<P>
<S ID='S-116' TYPE='ITEM' AZ='OWN' > recall - the percentage of POS s which were assigned correctly by the guesser to a word ; . </S>
<S ID='S-117' TYPE='ITEM' AZ='OWN' > precision - the percentage of POS s the guesser assigned correctly over the total number of POS s it assigned to the word ; . </S>
<S ID='S-118' TYPE='ITEM' AZ='OWN' > coverage - the proportion of words which the guesser was able to classify , but not necessarily correctly ; . </S>
</P>
<P>
<S ID='S-119' AZ='OWN'> In our experiments we measured word precision and word recall ( micro-average ) . </S>
<S ID='S-120' AZ='OWN'> There were two types of data in use at this stage . </S>
<S ID='S-121' AZ='OWN'> First , we evaluated the guessing rules against the actual lexicon : every word from the lexicon , except for closed-class words and words shorter than five characters , was guessed by the different guessing strategies and the results were compared with the information the word had in the lexicon . </S>
<S ID='S-122' AZ='OWN'> In the other evaluation experiment we measured the performance of the guessing rules against the training corpus . </S>
<S ID='S-123' AZ='OWN'> For every word we computed its metrics exactly as in the previous experiment . </S>
<S ID='S-124' AZ='OWN'> Then we multiplied these results by the corpus frequency of this particular word and averaged them . </S>
<S ID='S-125' AZ='OWN'> Thus the most frequent words had the greatest influence on the aggreagte measures . </S>
</P>
<P>
<S ID='S-126' AZ='OWN'> First , we concentrated on finding the best thresholds <EQN/> for the rule-sets . </S>
<S ID='S-127' AZ='OWN'> To do that for each rule-set produced using different thresholds we recorded the three metrics and chose the set with the best aggregate . </S>
<S ID='S-128' AZ='OWN'> In Table <CREF/> some results of that experiment are shown . </S>
<S ID='S-129' AZ='OWN'> The best thresholds were detected : for ending rules - 75 points , for suffix rules - 60 , and for prefix rules - 80 . </S>
<S ID='S-130' AZ='OWN'> One can notice a slight difference in the results obtained over the lexicon and the corpus . </S>
<S ID='S-131' AZ='OWN'> The corpus results are better because the training technique explicitly targeted the rule-sets to the most frequent cases of the corpus rather than the lexicon . </S>
<S ID='S-132' AZ='OWN'> In average ending-guessing rules were detected to cover over 96 % of the unknown words . </S>
<S ID='S-133' AZ='OWN'> The precision of 74 % roughly can be interpreted as that for words which take on three different POS s in their POS - class , the ending-guessing rules will assign four , but in 95 % of the times ( recall ) the three required POS s will be among the four assigned by the guess . </S>
<S ID='S-134' AZ='CTR'> In comparison with the Xerox word-ending guesser taken as the base-line model we detect a substantial increase in the precision by about 22 % and a cheerful increase in coverage by about 6 % . </S>
<S ID='S-135' AZ='CTR'> This means that the Xerox guesser creates more ambiguity for the disambiguator , assigning five instead of three POS s in the example above . </S>
<S ID='S-136' AZ='CTR'> It can also handle 6 % less unknown words which , in fact , might decrease its performance even lower . </S>
<S ID='S-137' AZ='OWN'> In comparison with the ending-guessing rules , the morphological rules have much better precision and hence better accuracy of guessing . </S>
<S ID='S-138' AZ='OWN'> Virtually almost every word which can be guessed by the morphological rules is guessed exactly correct ( 97 % recall and 97 % precision ) . </S>
<S ID='S-139' AZ='OWN'> Not surprisingly , the coverage of morphological rules is much lower than that of the ending-guessing ones - for the suffix rules it is less than 40 % and for the prefix rules about 5 - 6 . </S>
</P>
<IMAGE ID='I-6'/>
<P>
<S ID='S-140' AZ='OWN'> After obtaining the optimal rule-sets we performed the same experiment on a word-sample which was not included into the training lexicon and corpus . </S>
<S ID='S-141' AZ='OWN'> We gathered about three thousand words from the lexicon developed for the Wall Street Journal corpus and collected frequencies of these words in this corpus . </S>
<S ID='S-142' AZ='OWN'> At this experiment we obtained similar metrics apart from the coverage which dropped about 0.5 % for Ending 75 and Xerox rule-sets and 7 % for the Suffix 60 rule-set . </S>
<S ID='S-143' AZ='OWN'> This , actually , did not come as a surprise , since many main forms required by the suffix rules were missing in the lexicon . </S>
</P>
<P>
<S ID='S-144' AZ='OWN'> In the next experiment we evaluated whether the morphological rules add any improvement if they are used in conjunction with the ending-guessing rules . </S>
<S ID='S-145' AZ='OWN'> We also evaluated in detail whether a conjunctive application with the Xerox guesser would boost the performance . </S>
<S ID='S-146' AZ='OWN'> As in the previous experiment we measured the precision , recall and coverage both on the lexicon and on the corpus . </S>
<S ID='S-147' AZ='OWN'> Table <CREF/> demonstrates some results of this experiment . </S>
<S ID='S-148' AZ='OWN'> The first part of the table shows that when the Xerox guesser is applied before the E <EQN/> guesser we measure a drop in the performance . </S>
<S ID='S-149' AZ='OWN'> When the Xerox guesser is applied after the E <EQN/> guesser no sufficient changes to the performance are noticed . </S>
<S ID='S-150' AZ='OWN'> This actually proves that the E <EQN/> rule-set fully supercedes the Xerox rule-set . </S>
<S ID='S-151' AZ='OWN'> The second part of the table shows that the cascading application of the morphological rule-sets together with the ending-guessing rules increases the overall precision of the guessing by a further 5 % . </S>
<S ID='S-152' AZ='OWN'> This makes the improvements against the base-line Xerox guesser 28 % in precision and 7 % in coverage . </S>
</P>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-8'> Tagging Unknown Words </HEADER>
<P>
<S ID='S-153' AZ='OWN'> The direct evaluation of the rule-sets gave us the grounds for the comparison and selection of the best performing guessing rule-sets . </S>
<S ID='S-154' AZ='OWN'> The task of unknown word guessing is , however , a subtask of the overall part-of-speech tagging process . </S>
<S ID='S-155' AZ='OWN'> Thus we are mostly interested in how the advantage of one rule-set over another will affect the tagging performance . </S>
<S ID='S-156' AZ='OWN'> So , we performed an independent evaluation of the impact of the word guessers on tagging accuracy . </S>
<S ID='S-157' AZ='CTR'> In this evaluation we tried two different taggers . </S>
<S ID='S-158' AZ='OTH'> First , we used a tagger which was a C++ re-implementation of the LISP implemented HMM Xerox tagger described in <REF TYPE='A'>Kupiec 1992</REF> . </S>
<S ID='S-159' AZ='OTH'> The other tagger was the rule-based tagger of <REF TYPE='A'>Brill 1995</REF> . </S>
<S ID='S-160' AZ='OTH'> Both of the taggers come with data and word-guessing components pre-trained on the Brown Corpus . </S>
<S ID='S-161' AZ='OWN'> This , actually gave us the search-space of four combinations : the Xerox tagger equipped with the original Xerox guesser , <REFAUTHOR>Brill</REFAUTHOR> 's tagger with its original guesser , the Xerox tagger with our cascading P <EQN/> + S <EQN/> + E <EQN/> guesser and <REFAUTHOR>Brill</REFAUTHOR> 's tagger with the cascading guesser . </S>
<S ID='S-162' AZ='OWN'> For words which failed to be guessed by the guessing rules we applied the standard method of classifying them as common nouns ( NN ) if they are not capitalised inside a sentence and proper nouns ( NP ) otherwise . </S>
<S ID='S-163' AZ='OWN'> As the base-line result we measured the performance of the taggers with all known words on the same word sample . </S>
</P>
<P>
<S ID='S-164' AZ='OWN'> In the evaluation of tagging accuracy on unknown words we pay attention to two metrics . </S>
<S ID='S-165' AZ='OWN'> First we measure the accuracy of tagging solely on unknown words : </S>
</P>
<IMAGE ID='I-7'/>
<P>
<S ID='S-166' AZ='OWN'> This metric gives us the exact measure of how the tagger has done on unknown words . </S>
<S ID='S-167' AZ='OWN'> In this case , however , we do not account for the known words which were mis-tagged because of the guessers . </S>
<S ID='S-168' AZ='OWN'> To put a perspective on that aspect we measure the overall tagging performance : </S>
</P>
<IMAGE ID='I-8'/>
<IMAGE ID='I-9'/>
<IMAGE ID='I-10'/>
<P>
<S ID='S-169' AZ='OWN'> Since the Brown Corpus model is a general language model , it , in principle , does not put restrictions on the type of text it can be used for , although its performance might be slightly lower than that of a model specialised for this particular sublanguage . </S>
<S ID='S-170' AZ='OWN'> Here we want to stress that our primary task was not to evaluate the taggers themselves but rather their performance with the word-guessing modules . </S>
<S ID='S-171' AZ='OWN'> So we did not worry too much about tuning the taggers for the texts and used the Brown Corpus model instead . </S>
<S ID='S-172' AZ='OWN'> We tagged several texts of different origins , except from the Brown Corpus . </S>
<S ID='S-173' AZ='OWN'> These texts were not seen at the training phase which means that neither the taggers nor the guessers had been trained on these texts and they naturally had words unknown to the lexicon . </S>
<S ID='S-174' AZ='OWN'> For each text we performed two tagging experiments . </S>
<S ID='S-175' AZ='OWN'> In the first experiment we tagged the text with the Brown Corpus lexicon supplied with the taggers and hence had only those unknown words which naturally occur in this text . </S>
<S ID='S-176' AZ='OWN'> In the second experiment we tagged the same text with the lexicon which contained only closed-class and short words . </S>
<S ID='S-177' AZ='OWN'> This small lexicon contained only 5,456 entries out of 53,015 entries of the original Brown Corpus lexicon . </S>
<S ID='S-178' AZ='OWN'> All other words were considered as unknown and had to be guessed by the guessers . </S>
</P>
<P>
<S ID='S-179' AZ='OWN'> We obtained quite stable results in these experiments . </S>
<S ID='S-180' AZ='OWN'> Here is a typical example of tagging a text of 5970 words . </S>
<S ID='S-181' AZ='OWN'> This text was detected to have 347 unknown words . </S>
<S ID='S-182' AZ='OWN'> First , we tagged the text by the four different combinations of the taggers with the word-guessers using the full-fledged lexicon . </S>
<S ID='S-183' AZ='OWN'> The results of this tagging are summarised in Table <CREF/> . </S>
<S ID='S-184' AZ='CTR'> When using the Xerox tagger with its original guesser , 63 unknown words were incorrectly tagged and the accuracy on the unknown words was measured at 81.8 % . </S>
<S ID='S-185' AZ='CTR'> When the Xerox tagger was equipped with our cascading guesser its accuracy on unknown words increased by almost 9 % upto 90.5 % . </S>
<S ID='S-186' AZ='OWN'> The same situation was detected with <REFAUTHOR>Brill</REFAUTHOR> 's tagger which in general was slightly more accurate than the Xerox one . </S>
<S ID='S-187' AZ='CTR'> The cascading guesser performed better than <REFAUTHOR>Brill</REFAUTHOR> 's original guesser by about 8 % boosting the performance on the unknown words from 84.5 % to 92.2 % . </S>
<S ID='S-188' AZ='OWN'> The accuracy of the taggers on the set of 347 unknown words when they were made known to the lexicon was detected at 98.5 % for both taggers . </S>
</P>
<P>
<S ID='S-189' AZ='OWN'> In the second experiment we tagged the same text in the same way but with the small lexicon . </S>
<S ID='S-190' AZ='OWN'> Out of 5,970 words of the text , 2,215 were unknown to the small lexicon . </S>
<S ID='S-191' AZ='OWN'> The results of this tagging are summarised in Table <CREF/> . </S>
<S ID='S-192' AZ='OWN'> The accuracy of the taggers on the 2,215 unknown words when they were made known to the lexicon was much lower than in the previous experiment -- 90.3 % for the Xerox tagger and 91.5 % for <REFAUTHOR>Brill</REFAUTHOR> 's tagger . </S>
<S ID='S-193' AZ='OWN'> Naturally , the performance of the guessers was also lower than in the previous experiment plus the fact that many `` semi-closed '' class adverbs like `` however '' , `` instead '' , etc . </S>
<S ID='S-194' AZ='OWN'> , were missing in the small lexicon . </S>
<S ID='S-195' AZ='OWN'> The accuracy of the tagging on unknown words dropped by about 5 % in general . </S>
<S ID='S-196' AZ='CTR'> The best results on unknown words were again obtained on the cascading guesser ( 86 % - 87.45 % ) and <REFAUTHOR>Brill</REFAUTHOR> 's tagger again did better then the Xerox one by 1.5 . </S>
</P>
<P>
<S ID='S-197' AZ='OWN'> Two types of mis-taggings caused by the guessers occured . </S>
<S ID='S-198' AZ='OWN'> The first type is when guessers provided broader POS - classes for unknown words and the tagger had difficulties with the disambiguation of such broader classes . </S>
<S ID='S-199' AZ='OWN'> This is especially the case with the `` ing '' words which , in general , can act as nouns , adjectives and gerunds and only direct lexicalization can restrict the search space , as in the case with the word `` going '' which cannot be an adjective but only a noun and a gerund . </S>
<S ID='S-200' AZ='OWN'> The second type of mis-tagging was caused by wrong assignments of POS s by the guesser . </S>
<S ID='S-201' AZ='OWN'> Usually this is the case with irregular words like , for example , `` cattle '' which was wrongly guessed as a singular noun ( NN ) but in fact is a plural noun ( NNS ) . </S>
</P>
</DIV>
<DIV DEPTH='1'>
<HEADER ID='H-9'> Discussion and Conclusion </HEADER>
<P>
<S ID='S-202' ABSTRACTC='A-1' AZ='AIM'> We presented a technique for fully unsupervised statistical acquisition of rules which guess possible parts-of-speech for words unknown to the lexicon . </S>
<S ID='S-203' AZ='OWN'> This technique does not require specially prepared training data and uses for training the lexicon and word frequencies collected from a raw corpus . </S>
<S ID='S-204' ABSTRACTC='A-2' AZ='OWN'> Using these training data three types of guessing rules are learned : prefix morphological rules , suffix morphological rules and ending-guessing rules . </S>
<S ID='S-205' AZ='OWN'> To select best performing guessing rule-sets we suggested an evaluation methodology , which is solely dedicated to the performance of part-of-speech guessers . </S>
</P>
<P>
<S ID='S-206' AZ='CTR'> Evaluation of tagging accuracy on unknown words using texts unseen by the guessers and the taggers at the training phase showed that tagging with the automatically induced cascading guesser was consistently more accurate than previously quoted results known to the author ( 85 % ) . </S>
<S ID='S-207' AZ='CTR'> The cascading guesser outperformed the guesser supplied with the Xerox tagger by about 8 - 9 % and the guesser supplied with <REFAUTHOR>Brill</REFAUTHOR> 's tagger by about 6 - 7 % . </S>
<S ID='S-208' AZ='OWN'> Tagging accuracy on unknown words using the cascading guesser was detected at 90 - 92 % when tagging with the full-fledged lexicon and 86 - 88 % when tagging with the closed-class and short word lexicon . </S>
<S ID='S-209' AZ='OWN'> When the unknown words were made known to the lexicon the accuracy of tagging was detected at 96 - 98 % and 90 - 92 % respectively . </S>
<S ID='S-210' AZ='OWN'> This makes the accuracy drop caused by the cascading guesser to be less than 6 % in general . </S>
<S ID='S-211' AZ='OWN'> Another important conclusion from the evaluation experiments is that the morphological guessing rules do improve the guessing performance . </S>
<S ID='S-212' AZ='OWN'> Since they are more accurate than ending-guessing rules they are applied before ending-guessing rules and improve the precision of the guessings by about 5 % . </S>
<S ID='S-213' AZ='OWN'> This , actually , results in about 2 % higher accuracy of tagging on unknown words . </S>
</P>
<P>
<S ID='S-214' AZ='OWN'> The acquired guessing rules employed in our cascading guesser are , in fact , of a standard nature and in that form or another are used in other POS - guessers . </S>
<S ID='S-215' AZ='OWN' TYPE='ITEM'> There are , however , a few points which make the rule-sets acquired by the presented here technique more accurate : </S>
</P>
<P>
<S ID='S-216' TYPE='ITEM' AZ='OWN' > the learning of such rules is done from the lexicon rather than tagged corpus , because the guesser 's task is akin to the lexicon lookup ; </S>
<S ID='S-217' TYPE='ITEM' AZ='OWN' > there is a well-tuned statistical scoring procedure which accounts for rule features and frequency distribution ; </S>
<S ID='S-218' TYPE='ITEM' AZ='OWN' > there is an empirical way to determine an optimum collection of rules , since acquired rules are subject to rigorous direct evaluation in terms of precision , recall and coverage ;</S>
<S ID='S-219' TYPE='ITEM' AZ='OWN' > rules are applied cascadingly using the most accurate rules first . </S>
</P>
<P>
<S ID='S-220' AZ='OWN'> One of the most important issues in the induction of guessing rule-sets is the choice right data for training . </S>
<S ID='S-221' AZ='OWN'> In our approach , guessing rules are extracted from the lexicon and the actual corpus frequencies of word-usage then allow for discrimination between rules which are no longer productive ( but have left their imprint on the basic lexicon ) and rules that are productive in real-life texts . </S>
<S ID='S-222' AZ='OWN'> Thus the major factor in the learning process is the lexicon . </S>
<S ID='S-223' AZ='OWN'> Since guessing rules are meant to capture general language regularities the lexicon should be as general as possible ( list all possible POS s for a word ) and as large as possible . </S>
<S ID='S-224' AZ='OWN'> The corresponding corpus should include most of the words from the lexicon and be large enough to obtain reliable estimates of word-frequency distribution . </S>
<S ID='S-225' AZ='OWN'> Our experiments with the lexicon and word frequencies derived from the Brown Corpus , which can be considered as a general model of English , resulted in guessing rule-sets which proved to be domain and corpus independent , producing similar results on test texts of different origin . </S>
</P>
<P>
<S ID='S-226' AZ='OWN'> Although in general the performance of the cascading guesser is only 6 % worse than the lookup of a general language lexicon there is room for improvement . </S>
<S ID='S-227' AZ='OWN'> First , in the extraction of the morphological rules we did not attempt to model non-concatenative cases . </S>
<S ID='S-228' AZ='OWN'> In English , however , since most of letter mutations occur in the last letter of the main word it is possible to account for it . </S>
<S ID='S-229' AZ='OWN'> So our next goal is to extract morphological rules with one letter mutations at the end . </S>
<S ID='S-230' AZ='OWN'> This would account for cases like `` try - tries '' , `` reduce - reducing '' , `` advise - advisable '' . </S>
<S ID='S-231' AZ='OWN'> We expect it to increase the coverage of thesuffix morphological rules and hence contribute to the overall guessing accuracy . </S>
<S ID='S-232' AZ='OWN'> Another avenue for improvement is to provide the guessing rules with the probabilities of emission of POS s from their resulting POS - classes . </S>
<S ID='S-233' AZ='OWN'> This information can be compiled automatically and also might improve the accuracy of tagging unknown words . </S>
</P>
<P>
<S ID='S-234' AZ='OWN'> The described rule acquisition and evaluation methods are implemented as a modular set of C ++ and AWK tools , and the guesser is easily extendable to sub-language specific regularities and retrainable to new tag-sets and other languages , provided that these languages have affixational morphology . </S>
<S ID='S-235' AZ='OWN'> Both the software and the produced guessing rule-sets are available by contacting the author . </S>
</P>
</DIV>
</BODY>
<REFERENCELIST>
<REFERENCE>
E. <SURNAME>Brill</SURNAME>
<DATE>1994</DATE>.
Some Advances in Transformation-Based Part of Speech Tagging.
In Proceedings of the Twelfth  National 
  Conference on Artificialntelligence (AAAAI-94), Seattle, WA.
</REFERENCE>
<REFERENCE>
E. <SURNAME>Brill</SURNAME>
<DATE>1995</DATE>.
Transformation-based error-driven learning and Natural Language
processing: a case study in part-of-speech tagging.
In Computational Linguistics 21(4) pp. 543-565.
</REFERENCE>
<REFERENCE>
W. <SURNAME>Francis</SURNAME> and H. <SURNAME>Kucera</SURNAME> 
<DATE>1982</DATE>.
Frequency Analysis of English Usage.
Houghton Mifflin,  Boston <DATE>1982</DATE>.
</REFERENCE>
<REFERENCE>
J. <SURNAME>Kupiec</SURNAME>
<DATE>1992</DATE>.
Robust Part-of-Speech Tagging Using a Hidden Markov Model. 
In Computer Speech and Language
</REFERENCE>
<REFERENCE>
M. <SURNAME>Marcus</SURNAME>, M.A. <SURNAME>Marcinkiewicz</SURNAME>,  and B. <SURNAME>Santorini</SURNAME> 
<DATE>1993</DATE>.
Building a Large Annotated Corpus of English: The Penn Treebank.
In Computational Linguistics, vol 19/2 pp.313-329
</REFERENCE>
<REFERENCE>
H. <SURNAME>Schmid</SURNAME>
<DATE>1994</DATE>.
Part of Speech Tagging with Neural Networks.
In Proceedings of the International Conference on
  Computational Linguistics, pp.172-176, Kyoto, Japan.
</REFERENCE>
<REFERENCE>
  E. <SURNAME>Tzoukermann</SURNAME>, D.R. <SURNAME>Radev</SURNAME>, and W.A. <SURNAME>Gale</SURNAME>
  <DATE>1995</DATE>.  
  Combining Linguistic Knowledge and
  Statistical Learning in French Part of Speech Tagging.  
  In EACL SIGDAT Workshop, pp.51-59, Dublin, Ireland
</REFERENCE>
<REFERENCE>
A. <SURNAME>Voutilainen</SURNAME>
<DATE>1995</DATE>.
A Syntax-Based Part-of-Speech Analyser 
In Proceedings of the Seventh Conference of European
    Chapter of the Association for Computational Linguistics (EACL) 
    pp.157-164,  Dublin, Ireland
</REFERENCE>
<REFERENCE>
R. <SURNAME>Weischedel</SURNAME>, M. <SURNAME>Meteer</SURNAME>, R. <SURNAME>Schwartz</SURNAME>, L. <SURNAME>Ramshaw</SURNAME> and J. <SURNAME>Palmucci</SURNAME> 
<DATE>1993</DATE>.
Coping with ambiguity and unknown words through probabilistic models.
In Computational Linguistics, vol 19/2 pp.359-382
</REFERENCE>
<REFERENCE>
Byoungtak <SURNAME>Zhang</SURNAME> and Yung-Taek Kim
<DATE>1990</DATE>.
Morphological Analysis and Synthesis by Automated Discovery 
   and Acquisition of Linguistic Rules. 
In Proceedings of the 13th International Conference on
  Computational Linguistics, pp.431-435, Helsinki, Finland.
</REFERENCE>
</REFERENCELIST>
</PAPER>
