BKG	Both anaphora resolution and prepositional phrase ( PP ) attachment are the most frequent ambiguities in natural language processing .	A-0
CTR	Several methods have been proposed to deal with each phenomenon separately , however none of proposed systems has considered the way of dealing both phenomena .	A-1
AIM	We tackle this issue here , proposing an algorithm to co-ordinate the treatment of these two problems efficiently , i.e. , the aim is also to exploit at each step all the results that each component can provide .	A-2
OTH	Several methods have been proposed to deal with anaphora resolution and prepositional phrase ( PP ) attachment phenomenon and separately , so that the literature is very abundant : for PPs see e.g. ,,,) , and for anaphora see e.g. ,,,.	S-0
CTR	However none of these methods has considered the way of dealing both phenomena in the same concrete system .	S-1
AIM	We propose in this paper an algorithm that deals with both phenomena , in the same analyser .	S-2
BAS	The anaphora module pertains to the recent methods , uses a set of resolution rules based on the focusing approach.	S-3
OWN	These rules are applied to the conceptual representation and their output is a set of candidate antecedents .	S-4
BAS	Concerning the PPs , unattached prepositions involve empty or unfilled roles in the Conceptual Structures ( CSs ) , expressed in a frame-based language.	S-5
OWN	The disambiguation procedure aims at filling the empty roles using attachment rules .	S-6
OWN	This work was accomplished in the context of COBALT project ( LRE 61 - 011 ) , dealing with financial news .	S-7
BAS	A detailed discussion about both procedures of anaphora resolution and PP attachment is largely developed in.	S-8
OWN	Two of the main principles of the algorithm are :	S-9
OWN	The algorithm is applied on the text sentence by sentence , i.e. the ambiguities of the previous sentences have already been considered ( resolved or not ) .	S-10
OWN	The anaphora procedure skips the resolution of a given anaphor when this anaphor is preceded by an unattached preposition .	S-11
OWN	This is because the resolution rules may have an empty role as a parameter , due to this unattached preposition .	S-12
OWN	The resolution of the anaphor is then postponed to the second phase of anaphora resolution .	S-13
OWN	The proposed procedure is based on successive calls to the anaphora module and to the PP attachment module .	S-14
OWN	The output of each call is a set of CSs that represent the intermediate results exchanged between each call and on which both modules operate in turn .	S-15
OWN	The aim is to fill the unfilled roles in the CSs , due to anaphora or unattached PPs. To summarize the algorithm is :	S-16
OWN	Apply the anaphora module first .	S-17
OWN	Apply the PP attachment procedure .	S-18
OWN	If some anaphora are left unresolved , apply the anaphora module again .	S-19
OWN	If there are still unattached PPs , apply the attachment procedure again .	S-20
OWN	Repeatand, until all PPs and anaphors are treated .	S-21
OWN	The order in which the two modules are called is based on efficiency deduced from statistical data performed on COBALT corpuses .	S-22
OWN	Three main cases are faced by the algorithm :	S-23
OWN	When the anaphor occurs before a given preposition in the sentence , its resolution does not depend on where the preposition is to be attached ( except for cataphors that are quite rare ) .	S-24
OWN	In this case the anaphora module can be applied before the attachment procedure .	S-25
OWN	The examplebelow shows that the resolution of the anaphoric pronoun that must be performed first and that the PP starting with of be attached later .	S-26
OWN	When the anaphor occurs after one or several unattached prepositions , it could be an intra-sentential anaphor ( i.e. referring to an entity in the same sentence ) , then its resolution may depend on one of the previous prepositional phrases .	S-27
OWN	In this case , the resolution of the anaphora is postponed to a next call of the anaphora module according to principlestated above .	S-28
OWN	When the anaphor is included in a PP ( particular case of) , PP attachment rules need semantic information about the `` object '' of the PP ; when it is a pronoun , no semantic information is available , so that the attachment rules can not be applied .	S-29
OWN	The anaphoric pronouns have to be resolved first , so as to determine what semantic class they refer to ; the PP attachment procedure can then be applied .	S-30
OWN	When a sequence contains more than two such PPs , i.e. , with anaphors as objects , the length of a cycle is more than 4 .	S-31
OWN	The pronoun its can not be resolved by the anaphora resolution module because it is preceded by unattached PPs ; its resolution is skipped .	S-32
OWN	The PP attachment procedure is then called to determine the attachment of since and at while the object of the in PP comprises an anaphoric pronoun its ( case) and the on PP is preceded by its .	S-33
OWN	The attachment of both PPs is then skipped .	S-34
OWN	The anaphora module is called again to resolve the anaphoric pronoun its , which is possible , in this example , since the previous PPs have been attached and there is no anaphors before .	S-35
OWN	Finally , the PP attachment procedure has to be called again for the in and on PPs .	S-36
OWN	Notice that even if each module is called several times , there is no redundancy in the processing .	S-37
OWN	The algorithm should be considered as the splitting of both anaphora resolution and PP attachment procedures into several phases and not as the repetition of each procedure .	S-38
AIM	The objective was to emphasise more than it has been done until now , the fact that PP attachment and anaphora resolution could interact in the same system in order to produce a complete conceptual analysis , instead of slowing down each other .	S-39
OWN	The algorithm we proposed in this paper , is independent of the used approaches in both anaphora and attachment modules .	S-40
OWN	It concerns rather the way of managing the interaction between the two modules .	S-41
OWN	Our actual work addresses more the problems inside each module .	S-42
OWN	The attachment module has been implemented at 99 % .	S-43
OWN	Presently we are working on the extension of the anaphora module particularly to deal also with the anaphoric definite noun phrases .	S-44
