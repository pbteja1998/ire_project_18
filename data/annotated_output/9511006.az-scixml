BKG	Word groupings useful for language processing tasks are increasingly available , as thesauri appear on-line , and as distributional word clustering techniques improve .	A-0
CTR	However , for many tasks , one is interested in relationships among word senses , not words .	A-1
AIM	This paper presents a method for automatic sense disambiguation of nouns appearing within sets of related nouns -- the kind of data one finds in on-line thesauri , or as the output of distributional clustering algorithms .	A-2
OWN	Disambiguation is performed with respect to WordNet senses , which are fairly fine-grained ; however , the method also permits the assignment of higher-level WordNet categories rather than sense labels .	A-3
OWN	The method is illustrated primarily by example , though results of a more rigorous evaluation are also presented .	A-4
BKG	Word groupings useful for language processing tasks are increasingly available , as thesauri appear on-line , and as distributional techniques become increasingly widespread,,,,,,.	S-0
CTR	However , for many tasks , one is interested in relationships among word senses , not words .	S-1
BKG	Consider , for example , the cluster containing attorney , counsel , trial , court , and judge , used byto illustrate a `` semantically sticky '' group of words .	S-2
BKG	As is often the case where sense ambiguity is involved , we as readers impose the most coherent interpretation on the words within the group without being aware that we are doing so .	S-3
CTR	Yet a computational system has no choice but to consider other , more awkward possibilities -- for example , this cluster might be capturing a distributional relationship between advice ( as one sense of counsel ) and royalty ( as one sense of court ) .	S-4
CTR	This would be a mistake for many applications , such as query expansion in information retrieval , where a surfeit of false connections can outweigh the benefits obtained by using lexical knowledge .	S-5
BKG	One obvious solution to this problem would be to extend distributional grouping methods to word senses .	S-6
BKG	For example , one could construct vector representations of senses on the basis of their co-occurrence with words or with other senses .	S-7
CTR	Unfortunately , there are few corpora annotated with word sense information , and computing reliable statistics on word senses rather than words will require more data , rather than less .	S-8
CTR	Furthermore , one widely available example of a large , manually sense-tagged corpus -- the WordNet group 's annotated subset of the Brown corpus -- vividly illustrates the difficulty in obtaining suitable data .	S-9
CTR	It is quite small , by current corpus standards ( on the order of hundreds of thousands of words , rather than millions or tens of millions ) ; the direct annotation methodology used to create it is labor intensive (found that direct annotation takes twice as long as automatic tagging plus correction , for part-of-speech annotation ) ; and the output quality reflects the difficulty of the task ( inter-annotator disagreement is on the order of 10 % , as contrasted with the approximately 3 % error rate reported for part-of-speech annotation by) .	S-10
OTH	There have been some attempts to capture the behavior of semantic categories in a distributional setting , despite the unavailability of sense-annotated corpora .	S-11
OTH	For example ,take steps toward a distributional treatment of WordNet-based classes , using's approach to constructing vector representations from a large co-occurrence matrix .	S-12
OTH	's algorithm for sense disambiguation can be thought of as a way of determining how Roget 's thesaurus categories behave with respect to contextual features .	S-13
OTH	And my own treatment of selectional constraintsprovides a way to describe the plausibility of co-occurrence in terms of WordNet 's semantic categories , using co-occurrence relationships mediated by syntactic structure .	S-14
OTH	In each case , one begins with known semantic categories ( WordNet synsets , Roget 's numbered classes ) and non-sense-annotated text , and proceeds to a distributional characterization of semantic category behavior using co-occurrence relationships .	S-15
CTR	This paper begins from a rather different starting point .	S-16
OWN	As in the above-cited work , there is no presupposition that sense-annotated text is available .	S-17
AIM	Here , however , I make the assumption that word groupings have been obtained through some black box procedure , e.g. from analysis of unannotated text , and the goal is to annotate the words within the groupings post hoc using a knowledge-based catalogue of senses .	S-18
OWN	If successful , such an approach has obvious benefits : one can use whatever sources of good word groupings are available -- primarily unsupervised word clustering methods , but also on-line thesauri and the like -- without folding in the complexity of dealing with word senses at the same time .	S-19
BKG	The resulting sense groupings should be useful for a variety of purposes , although ultimately this work is motivated by the goal of sense disambiguation for unrestricted text using unsupervised methods .	S-20
OWN	Let us state the problem as follows .	S-21
OWN	We are given a set of words, with each wordhaving an associated setof possible senses .	S-22
OWN	We assume that there exists some set, representing the set of word senses that an ideal human judge would conclude belong to the group of senses corresponding to the word grouping W .	S-23
AIM	The goal is then to define a membership functionthat takes,, and W as its arguments and computes a value in [ 0,1 ] , representing the confidence with which one can state that sensebelongs in sense grouping W ' .	S-24
OWN	Note that , in principle , nothing precludes the possibility that multiple senses of a word are included in W ' .	S-25
BKG	Example .	S-26
BKG	Consider the following word group :	S-27
BKG	Restricting our attention to noun senses in WordNet , only lookout and crate are polysemous .	S-28
BKG	Treating this word group as W , one would expectto assign a value of 1 to the unique senses of the monosemous words , and to assign a high value to lookout 's sense as	S-29
BKG	Low ( or at least lower ) values ofwould be expected for the senses of lookout that correspond to an observation tower , or to the activity of watching .	S-30
OWN	Crate 's two WordNet senses correspond to the physical object and the quantity ( i.e. , crateful , as in `` a crateful of oranges '' ) ; my own intuition is that the first of these would more properly be included in W ' than the second , and should therefore receive a higher value of, though of course neither I nor any other individual really constitutes an `` ideal human judge . ''	S-31
BAS	The core of the disambiguation algorithm is a computation of semantic similarity using the WordNet taxonomy , a topic recently investigated by a number of people,,.	S-32
OWN	In this paper , I restrict my attention to WordNet 's taxonomy for nouns , and take an approach in which semantic similarity is evaluated on the basis of the information content shared by the items being compared .	S-33
OWN	The intuition behind the approach is simple : the more similar two words are , the more informative will be the most specific concept that subsumes them both .	S-34
OWN	( That is , their least upper bound in the taxonomy ; here a concept corresponds to a WordNet synset . )	S-35
OTH	The traditional method of evaluating similarity in a semantic network by measuring the path length between two nodes,also captures this , albeit indirectly , when the semantic network is just an hierarchy : if the minimal path of links between two nodes is long , that means it is necessary to go high in the taxonomy , to more abstract concepts , in order to find their least upper bound .	S-36
CTR	However , there are problems with the simple path-length definition of semantic similarity , and experiments using WordNet show that other measures of semantic similarity , such as the one employed here , provide a better match to human similarity judgments than simple path length does.	S-37
OWN	Given two wordsand, their semantic similarity is calculated as	S-38
OWN	whereis the set of WordNet synsets that subsume ( i.e. , are ancestors of ) bothand, in any sense of either word .	S-39
OWN	The concept c that maximizes the expression inwill be referred to as the most informative subsumer ofand.	S-40
OWN	Although there are many ways to associate probabilities with taxonomic classes , it is reasonable to require that concept probability be non-decreasing as one moves higher in the taxonomy ; i.e. , thatimplies.	S-41
OWN	This guarantees that `` more abstract '' does indeed mean `` less informative , '' defining informativeness in the traditional way in terms of log likelihood .	S-42
OWN	Probability estimates are derived from a corpus by computing	S-43
OWN	whereis the set of nouns having a sense subsumed by concept c. Probabilities are then computed simply as relative frequency :	S-44
OWN	where N is the total number of noun instances observed .	S-45
OWN	Singular and plural forms are counted as the same noun , and nouns not covered by WordNet are ignored .	S-46
OWN	Although the WordNet noun taxonomy has multiple root nodes , a single , `` virtual '' root node is assumed to exist , with the original root nodes as its children .	S-47
OWN	Note that by equationsthrough, if two senses have the virtual root node as their only upper bound then their similarity value is 0 .	S-48
OWN	Example .	S-49
OWN	The following table shows the semantic similarity computed for several word pairs , in each case shown with the most informative subsumer .	S-50
OWN	Probabilities were estimated using the Penn Treebank version of the Brown corpus .	S-51
OWN	The pairs come from an example given by, illustrating the words that human subjects most frequently judged as being associated with the word doctor .	S-52
OWN	( The word sick also appeared on the list , but is excluded here because it is not a noun . )	S-53
OWN	Doctors are minimally similar to medicine and hospitals , since these things are all instances of `` something having concrete existence , living or nonliving '' ( WordNet class entity ) , but they are much more similar to lawyers , since both are kinds of professional people , and even more similar to nurses , since both are professional people working specifically within the health professions .	S-54
OWN	Notice that similarity is a more specialized notion than association or relatedness : doctors and sickness may be highly associated , but one would not judge them to be particularly similar .	S-55
OWN	The disambiguation algorithm for noun groups is inspired by the observation that when two polysemous words are similar , their most informative subsumer provides information about which sense of each word is the relevant one .	S-56
OWN	In the above table , for example , both doctor and nurse are polysemous : WordNet records doctor not only as a kind of health professional , but also as someone who holds a Ph. D. , and nurse can mean not only a health professional but also a nanny .	S-57
OWN	When the two words are considered together , however , the shared element of meaning for the two relevant senses emerges in the form of the most informative subsumer .	S-58
OWN	It may be that other pairings of possible senses also share elements of meaning ( for example , doctor / Ph. D. and nurse / nanny are both descendants of person , individual ) .	S-59
OWN	However , in cases like those illustrated above , the more specific or informative the shared ancestor is , the more strongly it suggests which senses come to mind when the words are considered together .	S-60
OWN	The working hypothesis in this paper is that this holds true in general .	S-61
OWN	Turning that observation into an algorithm requires two things : a way to assign credit to word senses based on similarity with co-occurring words , and a tractable way to generalize to the case where more than two polysemous words are involved .	S-62
OWN	The algorithm given in Figuredoes both quite straightforwardly .	S-63
OWN	This algorithm considers the words in W pairwise , avoiding the tractability problems in considering all possible combinations of senses for the group (if each word had m senses ) .	S-64
OWN	For each pair considered , the most informative subsumer is identified , and this pair is only considered as supporting evidence for those senses that are descendants of that concept .	S-65
OWN	Notice that by equation, support [ i , k ] is a sum of log probabilities , and therefore preferring senses with high support is equivalent to optimizing a product of probabilities .	S-66
OWN	Thus considering words pairwise in the algorithm reflects a probabilistic independence assumption .	S-67
OWN	Example .	S-68
OWN	The most informative subsumer for doctor and nurse is health professional , and therefore that pairing contributes support to the sense of doctor as an M.D. , but not a Ph. D.	S-69
OWN	Similarly , it contributes support to the sense of nurse as a health professional , but not a nanny .	S-70
OWN	The amount of support contributed by a pairwise comparison is proportional to how informative the most informative subsumer is .	S-71
OWN	Therefore the evidence for the senses of a word will be influenced more by more similar words and less by less similar words .	S-72
OWN	By the time this process is completed over all pairs , each sense of each word in the group has had the potential of receiving supporting evidence from a pairing with every other word in the group .	S-73
OWN	The value assigned to that sense is then the proportion of support it did receive , out of the support possible .	S-74
OWN	( The latter is kept track of by array normalization in the pseudocode . )	S-75
BAS	The intuition behind this algorithm is essentially the same intuition exploited by,, and others : the most plausible assignment of senses to multiple co-occurring words is the one that maximizes relatedness of meaning among the senses chosen .	S-76
CTR	Here I make an explicit comparison with's approach , since it is the most similar of previous work .	S-77
OTH	gives as an example of the problem he is solving the following paragraph from the corpus of 1963 Time magazine articles used in information retrieval research ( uppercase in the Time corpus , lowercase here for readability ; punctuation is as it appears in the original corpus ) :	S-78
OTH	From this ,extracts the following noun grouping to disambiguate :	S-79
OTH	These are the non-stopword nouns in the paragraph that appear in WordNet ( he used version 1.2 ) .	S-80
BAS	The description of's algorithm for disambiguating noun groupings like this one is similar to the one proposed here , in a number of ways : relatedness is characterized in terms of a semantic network ( specifically WordNet ) ; the focus is on nouns only ; and evaluations of semantic similarity ( or , in's case , semantic distance ) are the basis for sense selection .	S-81
CTR	However , there are some important differences , as well .	S-82
CTR	First , unlike's proposal , this algorithm aims to disambiguate groupings of nouns already established ( e.g. by clustering , or by manual effort ) to be related , as opposed to groupings of nouns that happen to appear near each other in running text ( which may or may not reflect relatedness based on meaning ) .	S-83
OWN	This provides some justification for restricting attention to similarity ( reflected by the scaffolding of links in the taxonomy ) , as opposed to the more general notion of association .	S-84
CTR	Second , this difference is reflected algorithmically by the fact thatuses not only links but also other WordNet links such as PART-OF .	S-85
CTR	Third , unlike's algorithm , the semantic similarity / distance computation here is not based on path length , but on information content , a choice that I have argued for elsewhere,.	S-86
CTR	Fourth , the combinatorics are handled differently :explores analyzing all sense combinations ( and living with the exponential complexity ) , as well as the alternative of sequentially `` freezing '' a single sense for each ofand using those choices , assumed to be correct , as the basis for disambiguating.	S-87
CTR	The algorithm presented here falls between those two alternatives .	S-88
CTR	A final , important difference between this algorithm and previous algorithms for sense disambiguation is that it offers the possibility of assigning higher-level WordNet categories rather than lowest-level sense labels .	S-89
OWN	It is a simple modification to the algorithm to assign values ofnot only to synsets directly containing words in W , but to any ancestors of those synsets -- one need only let the list of synsets associated with each word( i.e. ,in the problem statement of Section) also include any synset that is an ancestor of any synset containing word.	S-90
OWN	Assuming that num _ senses ( w [ i ] ) and sense [ i , k ] are reinterpreted accordingly , the algorithm will computenot only for the synsets directly including words in W , but also for any higher-level abstractions of them .	S-91
OWN	Example .	S-92
OWN	Consider the word group doctor , nurse , lawyer .	S-93
OWN	If one were to include all subsuming concepts for each word , rather than just the synsets of which they are directly members , the concepts with non-zero values ofwould be as follows :	S-94
OWN	For doctor :	S-95
OWN	For nurse :	S-96
OWN	For lawyer :	S-97
OWN	Given assignments ofat all levels of abstraction , one obvious method of semantic annotation is to assign the highest-level concept for whichis at least as large as the sense-specific value of.	S-98
OWN	For instance , in the previous example , one would assign the annotation health professional to both doctor and nurse ( thus explicitly capturing a generalization about their presence in the word group , at the appropriate level of abstraction ) , and the annotation professional to lawyer .	S-99
TXT	In this section I present a number of examples for evaluation by inspection .	S-100
OWN	In each case , I give the source of the noun grouping , the grouping itself , and for each word a description of word senses together with their values of.	S-101
OTH	Distributional cluster: head , body , hands , eye , voice , arm , seat , hair , mouth .	S-102
OTH	This group was among classes hand-selected byas `` particularly interesting . ''	S-103
OTH	Distributional cluster: tie , jacket , suit .	S-104
OTH	This cluster was derived byusing a modification of their algorithm , designed to uncover `` semantically sticky '' clusters .	S-105
OTH	Distributional cluster: cost , expense , risk , profitability , deferral , earmarks , capstone , cardinality , mintage , reseller .	S-106
OTH	This cluster was one presented byas a randomly-selected class , rather than one hand-picked for its coherence .	S-107
OTH	( I hand-selected it from that group for presentation here , however . )	S-108
OTH	Distributional neighborhood: burglars , thief , rob , mugging , stray , robbing , lookout , chase , crate .	S-109
OTH	As noted in Section, this group represents a set of words similar to burglar , according to's method for deriving vector representation from corpus behavior .	S-110
OTH	In this case , words rob and robbing were excluded because they were not nouns in WordNet .	S-111
OTH	The word stray probably should be excluded also , since it most likely appears on this list as an adjective ( as in `` stray bullet '' ) .	S-112
OTH	Machine-generated thesaurus entry: method , test , mean , procedure , technique .	S-113
OTH	I chose this grouping at random from a thesaurus created automatically by's syntactico-distributional methods , using the MED corpus of medical abstracts as its source .	S-114
OTH	The group comes from from the thesaurus entry for the word method .	S-115
OTH	Note that mean probably should be means .	S-116
OTH	There is a tradition in sense disambiguation of taking particularly ambiguous words and evaluating a system 's performance on those words .	S-117
TXT	Here I look at one such case , the word line ; the goal is to see what sense the algorithm chooses when considering the word in the contexts of each of the Roget 's Thesaurus classes in which it appears , where a `` class '' includes all the nouns in one of the numbered categories .	S-118
OWN	The following list provides brief descriptions of the 25 senses of line in WordNet :	S-119
OWN	Since line appears in 13 of the numbered categories in Roget 's thesaurus , a full description of the values ofwould be too large for the present paper .	S-120
OWN	Indeed , showing all the nouns in the numbered categories would take up too much space : they average about 70 nouns apiece .	S-121
OWN	Instead , I identify the numbered category , and give the three WordNet senses of line for whichwas greatest .	S-122
OWN	Qualitatively , the algorithm does a good job in most of the categories .	S-123
OWN	The reader might find it an interesting exercise to try to decide which of the 25 senses he or she would choose , especially in the cases where the algorithm did less well ( e.g. categories #200 , #203 , #466 ) .	S-124
TXT	The previous section provided illustrative examples , demonstrating the performance of the algorithm on some interesting cases .	S-125
TXT	In this section , I present experimental results using a more rigorous evaluation methodology .	S-126
OWN	Input for this evaluation came from the numbered categories of Roget 's .	S-127
OWN	Test instances consisted of a noun group ( i.e. , all the nouns in a numbered category ) together with a single word in that group to be disambiguated .	S-128
OWN	To use an example from the previous section , category #590 ( `` Writing '' ) contains the following :	S-129
OWN	Any word or phrase in that group that appears in the noun taxonomy for WordNet would be a candidate as a test instance -- for example , line , or secret writing .	S-130
OWN	The test set , chosen at random , contained 125 test cases .	S-131
OWN	( Note that because of the random choice , there were some cases where more than one test instance came from the same numbered category . )	S-132
OWN	Two human judges were independently given the test cases to disambiguate .	S-133
OWN	For each case , they were given the full set of nouns in the numbered category ( as shown above ) together with descriptions of the WordNet senses for the word to be disambiguated ( as , for example , the list of 25 senses for line given in the previous section , though thankfully few words have that many senses ! ) .	S-134
OWN	It was a forced-choice task ; that is , the judge was required to choose exactly one sense .	S-135
OWN	In addition , for each judgment , the judge was required to provide a confidence value for this decision , ranging from 0 ( not at all confident ) to 4 ( highly confident ) .	S-136
OWN	Results are presented here individually by judge .	S-137
OWN	For purposes of evaluation , test instances for which the judge had low confidence ( i.e. confidence ratings of 0 or 1 ) were excluded .	S-138
OWN	For Judge 1 , there were 99 test instances with sufficiently high confidence to be considered .	S-139
OWN	As a baseline , ten runs were done selecting senses by random choice , with the average percent correct being 34.8 % , standard deviation 3.58 .	S-140
OWN	As an upper bound , Judge 2 was correct on 65.7 % of those test instances .	S-141
OWN	The disambiguation algorithm shows considerable progress toward this upper bound , with 58.6 % correct .	S-142
OWN	For Judge 2 , there were 86 test instances with sufficiently high confidence to be considered .	S-143
OWN	As a baseline , ten runs were done selecting senses by random choice , with the average percent correct being 33.3 % , standard deviation 3.83 .	S-144
OWN	As an upper bound , Judge 1 was correct on 68.6 % of those test instances .	S-145
OWN	Again , the disambiguation algorithm performs well , with 60.5 % correct .	S-146
CTR	The results of the evaluation are extremely encouraging , especially considering that disambiguating word senses to the level of fine-grainedness found in WordNet is quite a bit more difficult than disambiguation to the level of homographs,.	S-147
OWN	A note worth adding : it is not clear that the `` exact match '' criterion -- that is , evaluating algorithms by the percentage of exact matches of sense selection against a human-judged baseline -- is the right task .	S-148
OWN	In particular , in many tasks it is at least as important to avoid inappropriate senses than to select exactly the right one .	S-149
OWN	This would be the case in query expansion for information retrieval , for example , where indiscriminately adding inappropriate words to a query can degrade performance.	S-150
OWN	The examples presented in Sectionare encouraging in this regard : in addition to performing well at the task of assigning a high score to the best sense , it does a good job of assigning low scores to senses that are clearly inappropriate .	S-151
OWN	Regardless of the criterion for success , the algorithm does need further evaluation .	S-152
OWN	Immediate plans include a larger scale version of the experiment presented here , involving thesaurus classes , as well as a similarly designed evaluation of how the algorithm fares when presented with noun groups produced by distributional clustering .	S-153
OWN	In addition , I plan to explore alternative measures of semantic similarity , for example an improved variant on simple path length that has been proposed by.	S-154
OWN	Ultimately , this algorithm is intended to be part of a suite of techniques used for disambiguating words in running text with respect to WordNet senses .	S-155
OWN	I would argue that success at that task will require combining knowledge of the kind that WordNet provides , primarily about relatedness of meaning , with knowledge of the kind best provided by corpora , primarily about usage in context .	S-156
CTR	The difficulty with the latter kind of knowledge is that , until now , the widespread success in characterizing lexical behavior in terms of distributional relationships has applied at the level of words -- indeed , word forms -- as opposed to senses .	S-157
AIM	This paper represents a step toward getting as much leverage as possible out of work within that paradigm , and then using it to help determine relationships among word senses , which is really where the action is .	S-158
